<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>视频</title>
    <link href="css/howell.css" rel="stylesheet" />
    <script src="js/jquery/jquery-3.6.0.min.js"></script>
    <script src="js/howell.js/ext.js"></script>
    <script src="js/bootstrap/bootstrap.min.js"></script>
    <script src="js/bootstrap/bootstrap-datepicker.js" charset="gb2312"></script>
    <script src="js/bootstrap/bootstrap-timepicker.js"></script>
    <script src="js/nav.js"></script>
    <script src="js/howell.js/howell.js"></script>
    <script src="js/howell.js/howell.control.js"></script>
    <script src="jwplayer/jwplayer1.js?v=4171404"></script>

    <script src="js/client/enum.js"></script>
    <script src="js/client/struct.js"></script>

    <script src="js/client/management.js"></script>
    <script src="js/client/security.js"></script>
    <script src="js/client/client.js"></script>
    <script src="event/record/record_list_video.js"></script>

    <style type="text/css">
        body {
            padding-top: 125px !important;
        }

        .disable {
            background-color: #e8e8e8 !important;
            color: #aaaaaa !important;
            border-color: #aaaaaa !important;
        }

            .disable:hover {
                background-color: #e8e8e8 !important;
                color: #aaaaaa !important;
                border-color: #aaaaaa !important;
            }

                .disable:hover i {
                    color: #aaaaaa !important;
                }

        .contact-list .text-ellipsis {
            width: 80%;
        }

        .widget-container {
            background-color: transparent;
        }

        .tab-content {
            height: 700px;
        }

        .contact-list {
            background-color: white;
            overflow: auto;
        }

            .contact-list.preview {
                height: 375px;
            }

            .contact-list.playback {
                /*height: 350px;*/
                height: 375px;
            }

        .datetime {
            margin-top: 5px;
            /*height: 345px;*/
            height: 320px;
            background-color: white;
        }

        .ptz {
            margin-top: 5px;
            height: 320px;
            background-color: white;
            text-align: center;
        }

            .ptz .direction {
                margin: 0px auto;
            }

                .ptz .direction .btn {
                    margin: 5px 5px;
                }

        /*.ptz .lens {
                height: 70px;
            }

                .ptz .lens .btn {
                    padding: 5px 5px;
                    margin: 0 2px;
                }

            .ptz .zoom {
                border-bottom: 5px solid red;
            }

            .ptz .focus {
                border-bottom: 5px solid green;
            }

            .ptz .iris {
                border-bottom: 5px solid blue;
            }*/

        .datepicker.datepicker-dropdown.dropdown-menu {
            margin-left: -15px;
        }

        .form-horizontal {
            margin-bottom: 20px;
        }

        ul .selected {
            background-color: rgb(253, 243, 228);
        }



        .tab-content ul {
            padding-left: 15px;
        }

            .tab-content ul li {
                cursor: pointer;
                padding-left: 0px;
                list-style-type: none;
            }

        .widget-container .heading.tabs {
            padding: 15px 15px;
        }

        .lens {
            margin: 0 0;
            display: table-cell;
            color: #999999;
            border: 1px solid #bbbbbb;
            background-color: white;
            width: 300px;
        }

            .lens i {
                margin: 4px 4px;
            }

            .lens:hover {
                color: #999999;
            }

            .lens.left {
                border-right: none;
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
                text-align: right;
                padding-right: 0px;
                padding-left: 10px;
            }

                .lens.left:hover i {
                    color: #60c560;
                }

            .lens.right {
                border-left: none;
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
                text-align: left;
                padding-left: 0px;
                padding-right: 5px;
            }

                .lens.right:hover i {
                    color: #d9534f;
                }

        .btn.btn-default-outline:hover {
            color: #007aff;
            border: 1px solid #007aff;
            background-color: white;
        }

        .status {
            position: fixed;
            bottom: 20px;
            height: 40px;
            background-color: rgb(255,255,255);
            filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=70);
            background: rgba(255, 255, 255, 0.7);
            padding: 10px 10px;
            cursor: pointer;
            z-index: 1000;
        }

            .status.record {
                right: 6px;
            }

        .div_status_list {
            position: fixed;
            bottom: 70px;
            right: 20px;
            width: 300px;
            height: 700px;
            background-color: rgb(255,255,255);
            display: none;
            z-index: 1000;
            width: 415px;
        }

            .div_status_list .icon_btn {
                margin-left: 0px;
                width: 215px;
            }

        .navbar {
            height: 0;
        }

            .navbar .container-fluid.main-nav {
                display: none;
            }

        .icon_btn.can-not-click {
            cursor: default;
            color: #555;
        }

        .video {
            background-color: black;
            border: 1px solid green;
            float: left;
            position: relative;
            width: 50%;
            height: 50%;
            /*padding: 33.5px 0;*/
        }

            .video.selected {
                border: 1px solid rgb(90,170,236);
            }

            .video .mask {
                /*top: 33.5px;
                bottom: 63.5px;*/
                top: 0px;
                bottom: 30px;
                width: 100%;
                /*background-color: rgba(255,0,0,0.7);*/
            }
    </style>

</head>
<body>
    <div class="page-main row" id="main" style="width:1340px;height:730px;border:none;">
        <div class="col-md-3">
            <div class="widget-container fluid-height">
                <div class="heading tabs">
                    <ul class="nav nav-tabs" id="tabs" data-tabs="tabs">
                        <li class="active"><a href="#tab1" data-toggle="tab">预览</a> </li>
                        <li><a href="#tab2" data-toggle="tab">回放</a> </li>
                        <li class="pull-right"><a href="real_time_monitoring_ocx.htm">插件方式</a></li>
                    </ul>
                </div>
                <div class="tab-content" style="overflow: auto" id="my-tab-content">
                    <div class="tab-pane active" id="tab1">
                        <div class="contact-list padded preview">
                            <ul id="ulPreview"></ul>
                        </div>
                        <div class="ptz padded">
                            <div class="form-horizontal">
                                <table class="direction">
                                    <tr>
                                        <td></td>
                                        <td><a class="btn btn-permission icon-chevron-up disable" name="btnPTZ" onmouseup="ptz_direction_event(this, PTZDirection.Stop)" onmousedown="    ptz_direction_event(this, PTZDirection.Up)"></a></td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td><a class="btn btn-permission icon-chevron-left disable" name="btnPTZ" onmouseup="ptz_direction_event(this, PTZDirection.Stop)" onmousedown="    ptz_direction_event(this, PTZDirection.Left)"></a></td>
                                        <td></td>
                                        <td><a class="btn btn-permission icon-chevron-right disable" name="btnPTZ" onmouseup="ptz_direction_event(this, PTZDirection.Stop)" onmousedown="    ptz_direction_event(this, PTZDirection.Right)"></a></td>
                                    </tr>
                                    <tr>
                                        <td></td>
                                        <td><a class="btn btn-permission icon-chevron-down disable" name="btnPTZ" onmouseup="ptz_direction_event(this, PTZDirection.Stop)" onmousedown="    ptz_direction_event(this, PTZDirection.Down)"></a></td>
                                        <td></td>
                                    </tr>
                                </table>
                                <div class="pull-right btn btn-default-outline" id="stream" style="margin-right:0px;margin-top:-34px;" onclick="stream_event(this)">主码流</div>
                            </div>

                            <!--<div class="col-md-4 lens zoom">
                                <h4>镜头</h4>
                                <a class="btn btn-primary-outline icon-minus"></a>
                                <a class="btn btn-primary-outline icon-plus"></a>
                            </div>
                            <div class="col-md-4 lens focus">
                                <h4>聚焦</h4>
                                <a class="btn btn-primary-outline icon-minus"></a>
                                <a class="btn btn-primary-outline icon-plus"></a>
                            </div>
                            <div class="col-md-4 lens iris">
                                <h4>光圈</h4>
                            </div>-->
                            <div class="form-horizontal">
                                <a class="btn btn-success lens zoom left disable" name="btnPTZ" onmouseup="ptz_lens_event(this, PTZLens.Stop)" onmousedown="    ptz_lens_event(this, PTZLens.ZoomWide)" title="拉远">
                                    <i class="icon-minus pull-left"></i>
                                    镜
                                </a>
                                <a class="btn btn-danger lens zoom right disable" name="btnPTZ" onmouseup="ptz_lens_event(this, PTZLens.Stop)" onmousedown="    ptz_lens_event(this, PTZLens.ZoomTele)" title="拉近">
                                    <i class="icon-plus pull-right"></i>
                                    头
                                </a>
                            </div>
                            <div class="form-horizontal">
                                <a class="btn btn-success lens focus left disable" name="btnPTZ" onmouseup="ptz_lens_event(this, PTZLens.Stop)" onmousedown="ptz_lens_event(this, PTZLens.FocusFar)" title="变远">
                                    <i class="icon-minus pull-left"></i>
                                    聚
                                </a>
                                <a class="btn btn-danger lens focus right disable" name="btnPTZ" onmouseup="ptz_lens_event(this, PTZLens.Stop)" onmousedown="ptz_lens_event(this, PTZLens.FocusNear)" title="变近">
                                    <i class="icon-plus pull-right"></i>
                                    焦
                                </a>
                            </div>

                            <a class="btn btn-success lens focus left disable" name="btnPTZ" onmouseup="ptz_lens_event(this, PTZLens.Stop)" onmousedown="ptz_lens_event(this, PTZLens.IrisClose)" title="变远">
                                <i class="icon-minus pull-left"></i>
                                光
                            </a>
                            <a class="btn btn-danger lens focus right disable" name="btnPTZ" onmouseup="ptz_lens_event(this, PTZLens.Stop)" onmousedown="ptz_lens_event(this, PTZLens.IrisOpen)" title="变近">
                                <i class="icon-plus pull-right"></i>
                                圈
                            </a>
                        </div>
                    </div>
                    <div class="tab-pane" id="tab2">
                        <div class="contact-list padded playback">
                            <ul id="ulPlayback"></ul>
                        </div>
                        <div class="datetime padded">
                            <form action="#" class="form-horizontal">
                                <label>日期：</label>
                                <div class="input-group date datepicker" data-date-autoclose="true" data-date-format="dd.mm.yyyy"
                                     data-date-start-view="2">
                                    <input class="form-control" data-date-autoclose="true" data-date-format="yyyy-mm-dd" id="txt_date" type="text"><span class="input-group-addon"><i class="icon-calendar"></i></span></input>
                                </div>
                            </form>
                            <form action="#" class="form-horizontal">
                                <label>开始时间</label>
                                <div class="input-group bootstrap-timepicker">
                                    <input class="form-control" id="txt_time" type="text"><span class="input-group-addon">
                                        <i class="icon-time"></i>
                                    </span></input>
                                </div>
                            </form>
                            <form action="#" class="form-horizontal">
                                <a class="btn btn-primary-outline pull-right" onclick="playback_click(this)">确定</a>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-9" style="padding: 0 0;height:750px;">
            <div class="map-nev">
                <!--<a class='btn btn-xs btn-primary-outline widget-content' style='padding-left:14px;'><i class='icon-plus'></i></a>-->
                <table>
                    <tr>
                        <td>
                            <a class="icon-sign-blank btn btn-primary-outline" onclick="switch_screen(1); init_video(); return false;">

                            </a>
                        </td>
                        <td>
                            <a class="icon-th-large btn btn-primary-outline" onclick="switch_screen(2); init_video(); return false;">

                            </a>
                        </td>
                        <td>
                            <a class="icon-resize-full btn btn-primary-outline" onclick="all_full_screen()">

                            </a>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="map" id="screen" style="background-color:black;height:700px;">
                <div style="width:100%;height:100%;">
                    <div id="divVideo0" class="video selected" style="width:100%;height:100%;">
                    </div>
                    <div id="divVideo1" class="video" style="width:100%;height:100%;">
                    </div>
                    <div id="divVideo2" class="video" style="width:100%;height:100%;">
                    </div>
                    <div id="divVideo3" class="video" style="width:100%;height:100%;">
                    </div>
                </div>
            </div>
        </div>


        <div id="div_record_list" class="div_status_list">
        </div>
        <div id="div_record" class="status record" onclick="ShowStatus(this, { divId: 'div_record_list', source: 'event/record/record_list.htm?Map=video', status: showRecord, name: 'showRecord' });">
            <table width="100%">
                <tr>
                    <td class="icon">
                        <a class="icon-bell-alt"></a>
                    </td>
                    <td>
                        <a id="record_number">0</a>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</body>
</html>
<script type="text/javascript">
    var Property = {
        Inputs: new Dictionary(),
        Record: function (startDate, endDate, ComponentId) {
            var list = tryCatch(function () {
                return Client.Management().Event.Record(null, null, startDate, endDate, 1, 1);
            });
            if (list && list.Page) {
                return list.Page.TotalRecordCount;
            }
            return 0;
        },

    }
    var showRecord = false;
    function status() {
        var date = new Date();
        date.setHours(0, 0, 0, 0);
        var startDate = new Date();
        startDate.setHours(0, 0, 0, 0);
        startDate.setDate(date.getDate() - 1);
        var endDate = new Date();
        endDate.setDate(date.getDate() + 1);
        endDate.setHours(0, 0, 0, 0);
        getTag("record_number").innerHTML = Property.Record(startDate.toISOString(), endDate.toISOString());
    }

    document.body.onclick = function () {
        showRecord = false;
        $(".div_status_list").css("display", "none");
    }
    function ShowStatus(sender, args) {
        Trigger = document.createElement("a");
        Trigger.href = args.source;
        showRecord = false;
        $(".div_status_list").css("display", "none");

        var div = getTag(args.divId);
        div.innerHTML = "\n ";

        var display = "none";
        if (!args.status) {
            display = "block";
            var page = loadPage(args.source);
            $("#" + args.divId).append($(page));
        }
        this[args.name] = !args.status;

        div.style.display = display;
        div.style.height = (sender.offsetTop - 140) + "px";
        stopPropagation();
    }


    var deviceId = null;
    var inputId = null;
    var streamNo = 1;

    function stream_event(sender) {
        var btn = document.getElementById("stream");
        if (streamNo == 1) {
            streamNo = 2;
            btn.innerHTML = "子码流";
        }
        else {
            streamNo = 1;
            btn.innerHTML = "主码流";
        }
    }

    function ptz_direction_event(sender, args) {
        var permission = player.Devices[inputId].Permission;
        if (permission == VideoSourcePermissions.All || permission.indexOf(VideoSourcePermissions.PTZ) > -1) {
            tryCatch(function () {
                var result = Client.Management().Device.Video.Input.PTZ.Directions(deviceId, inputId, args, 30);
            });
        }
    }

    function ptz_lens_event(sender, args) {
        var permission = player.Devices[inputId].Permission;
        if (permission == VideoSourcePermissions.All || permission.indexOf(VideoSourcePermissions.PTZ) > -1) {
            if (is.Boolean(sender.checked)) {
                args = sender.checked ? PTZLens.IrisClose : PTZLens.IrisOpen;
            }
            tryCatch(function () {
                Client.Management().Device.Video.Input.PTZ.Lens(deviceId, inputId, args, 30);
            });
        }
    }

    function preview() {

        var selected = $(".video.selected");
        if (!selected && selected.length == 0)
            return;

        var div = selected[0];
        var id = div.id;

        $(".preview .selected").removeClass("selected");
        this.className += " selected";


        inputId = this.id;
        deviceId = new Id(inputId).getDeviceId();

        var PTZBtns = getTag("btnPTZ", getTagType.Name);
        var permission = player.Devices[inputId].Permission;
        if (permission == VideoSourcePermissions.All || permission.indexOf(VideoSourcePermissions.PTZ) > -1) {
            for (var i = 0; i < PTZBtns.length; i++) {
                PTZBtns.removeClass("disable");
            }
        }
        else {
            for (var i = 0; i < PTZBtns.length; i++) {
                PTZBtns.addClass("disable");
            }
        }

        var uri = new Uri(this.href);
        uri.Querys.stream = streamNo;

        var height = div.offsetWidth / 16.0 * 9.0;

        //var paddingTop = ((div.offsetHeight / mode - height) / mode) + "px";
        //var paddingBottom = ((div.offsetHeight / mode - height) / mode) + "px";
        var jw = jwplayer(id).setup({
            file: uri.toString(),
            height: 1 / mode,
            width: 1 / mode,
            className: "video selected",
            //paddingTop: paddingTop,
            //paddingBottom: paddingBottom,
            stretching: "exactfit",
            click: function (e) {
                $(".video").removeClass("selected");
                e.currentTarget.className += " selected";
            },
            autostart: true,
            fullscreen: false,
            rtmp: {
                bufferlength: 0.1
            },            
            mask: {
                className: "mask",
                ondblclick: function () {
                    isdblclick = true;
                    if (isFullScreen.get())
                        isFullScreen.set(false);
                    else
                        single_full_screen();
                }
            },
            primary: "html5",
            events: {
                onPause: function (e) {
                    //jwplayer(id).play();
                    //jwplayer(id).pause(false);

                },
                onFullscreen: function (obj) {
                    //isFullScreen = obj.fullscreen;
                },
                onDisplayClick: function (e) {
                    this.pause(false);
                },

            }


        });
        //jwplayer().off('displayClick', function () {
        //    jwplayer().play();
        //});

        return false;
    }

    function playback_click(sender, args) {

        var div = $(".video.selected")[0];
        if (!div)
            return;


        var divId = div.id;

        var href = $(".playback .selected")[0].href;

        href = new Uri(href);

        var txtDate = getTag("txt_date");
        var txtTime = getTag("txt_time");
        var date = new Date(Date.parse(txtDate.value.replace(/-/g, "/") + " " + txtTime.value));

        href.Querys.beg = date.toISOString();

        date.setMinutes(date.getMinutes() + 3);
        href.Querys.end = date.toISOString();
        href.Querys.user = username;
        href.Querys.password = sid;


        this.href = href;

        var height = div.offsetWidth / 16 * 9;
        //div.parentElement.style.paddingTop = ((700 - height) / 2) + "px";

        jwplayer(divId).setup({
            file: href.toString(),
            height: 1 / mode,
            width: 1 / mode,
            className: "video selected",
            stretching: "exactfit",
            click: function (e) {
                $(".video").removeClass("selected");
                e.currentTarget.className += " selected";
            },
            fullscreen: false,
            autostart: true,
            mask: {
                className: "mask",
                ondblclick: function () {
                    isdblclick = true;
                    if (isFullScreen.get())
                        isFullScreen.set(false);
                    else
                        single_full_screen();
                }
            }
        });



    }
    var isdblclick = false;

    function howell_jwplayer() {
        this.Devices = getDevice();
        function getDevice() {
            var result = new Dictionary();
            try {
                var userId = getCookie("uid");
                var inputs = Client.Security().User.Video.Input.List(userId);

                for (var i = 0; i < inputs.VideoInputChannelPermission.length; i++) {
                    var input = inputs.VideoInputChannelPermission[i];
                    result[input.Id] = input;
                }
            } catch (ex) {

            }
            return result;
        }
        this.toPreviewHtml = function () {
            var ul = getTag("ulPreview");
            this.Devices.forIn(function (channelId, value) {
                var li = document.createElement("li");
                //li.id = channelId;

                var a = document.createElement("a");
                a.id = channelId;
                var example = "rtmp://192.168.18.245/stream?dev_id=00310101031111111000002000000000&slot=1&stream=2&mode=live&user=admin&password=12345"
                var uri = new Uri(example);
                uri.Host = Client.Host;

                var id = new Id(channelId);

                uri.Querys.dev_id = id.getDeviceId();
                uri.Querys.slot = parseInt(id.ModuleId.No);
                uri.Querys.stream = streamNo;
                uri.Querys.user = username;
                uri.Querys.password = sid;

                a.className = "text-ellipsis";
                a.href = uri.toString();//视频通道号modolnum;stream码流

                //id/channel/stream/

                a.onclick = preview;
                a.innerHTML = value.Name;
                li.appendChild(a);
                ul.appendChild(li);
            });
        }



        this.toPlaybackHtml = function () {
            var ul = getTag("ulPlayback");
            this.Devices.forIn(function (channelId, value) {
                var li = document.createElement("li");
                var a = document.createElement("a");
                a.id = channelId;
                a.className = "";
                var example = "rtmp://192.168.18.245/stream?dev_id=00310101031111111000002000000000&slot=1&stream=1&mode=playback&user=admin&password=12345&beg=2016-01-14T00:18:18Z&end=2016-01-14T00:25:04Z";
                var uri = new Uri(example);
                uri.Host = Client.Host;

                var id = new Id(channelId);
                uri.Querys.dev_id = id.getDeviceId();
                uri.Querys.slot = parseInt(id.ModuleId.No);
                uri.Querys.user = username;
                uri.Querys.password = sid;
                a.className = "text-ellipsis";
                a.href = uri.toString();

                a.onclick = function () {
                    $(".playback .selected").removeClass("selected");
                    this.className += " selected";
                    return false;
                };
                a.innerHTML = value.Name;
                li.appendChild(a);
                ul.appendChild(li);
            });
        }
    }

    var username = "";
    var sid = "";
    var player = null;
    //多画面模式 1：单画面；2：多画面
    var mode = 1;
    var IsFullScreen = function () {
        var is = false;
        this.get = function () {
            return is;
        }
        this.set = function (val) {
            if (is == val) return;
            is = val;
            if (onfullscreenchanged)
                onfullscreenchanged(is);
        }
    }
    var onfullscreenchanged = function (is) {
        if (!is) {
            var video = $(".video.selected");
            video.css("width", beforeFullScreen.width).css("height", beforeFullScreen.height);
            fullExit();
        }
    }
    var isFullScreen = new IsFullScreen();
    var isEsc = true;

    var beforeFullScreen = {
        width: "100%",
        height: "100%",
        changed: false
    };

    function _load() {

        username = getCookie("username")
        sid = getCookie("sid");

        player = new howell_jwplayer();

        player.toPreviewHtml();
        player.toPlaybackHtml()
        $('#txt_date').datepicker({
            format: "yyyy-mm-dd",
        }).val(new Date().format("yyyy-MM-dd"));

        $("#txt_time").timepicker({
            minuteStep: 1,
            showSeconds: true,
            showMeridian: false
        });

        status();
        init_video();

        window.onresize = function (e) {

            //if (isFullScreen && beforeFullScreen.changed) {
            //    var video = $(".video.selected");
            //    video.css("width", beforeFullScreen.width).css("height", beforeFullScreen.height);
            //    isFullScreen = false;
            //}

            
            ////onfullscreenchanged(isEsc)
            ////isEsc = !isEsc;
            //beforeFullScreen.changed = true;

            if (!isdblclick && isFullScreen)
            {
                //var video = $(".video.selected");
                //video.css("width", beforeFullScreen.width).css("height", beforeFullScreen.height);
                isFullScreen.set(false);
            }

            isdblclick = false;
        }
    }




    function playbackWithEventRecord(record, inputId) {
        document.getElementById("tabPlayback").click();
        document.getElementById("playback_" + inputId).click();
        var date = Convert.ToDate(record.AlarmTime);
        document.getElementById("txt_date").value = date.format("yyyy-MM-dd");
        document.getElementById("txt_time").value = date.format("HH:mm:ss");
        playback_click();
    }

    function switch_screen(m) {
        if (mode == m)
            return;

        mode = m;
        var videos = $(".video");
        for (var i = 0; i < videos.length; i++) {

            var isSelected = $(videos[i]).hasClass("selected");

            var value = isSelected ? 100 / mode : 50 * (mode - 1);

            videos[i].style.width = value + "%";
            videos[i].style.height = value + "%";            

        }
    }

    function init_video() {

        $(".video").click(function (e) {
            $(".video").removeClass("selected");
            e.currentTarget.className += " selected";
        });
    }


    function all_full_screen() {
        isdblclick = true;
        var videos = $(".video");
        videos.css("width", 100 / mode + "%").css("height", 100 / mode + "%");
        var element = videos[0].parentElement;
        full_screen(element);
    }
    function single_full_screen() {
        var video = $(".video.selected");
        beforeFullScreen.width = video[0].style.width;
        beforeFullScreen.height = video[0].style.height;
        beforeFullScreen.changed = false;
        video.css("width", "100%").css("height", "100%");
        full_screen(video[0]);
    }


    function full_screen(element) {
        isEsc = true;
        var requestMethod = element.requestFullScreen || element.webkitRequestFullScreen || element.mozRequestFullScreen || element.msRequestFullScreen;
        if (requestMethod) {
            requestMethod.call(element);
            isFullScreen.set(true);
        } else if (typeof window.ActiveXObject !== "undefined") {
            var wscript = new ActiveXObject("WScript.Shell");
            if (wscript !== null) {
                wscript.SendKeys("{F11}");
                isFullScreen.set(true);
            }

        }
    }

    function fullExit() {
        var element = document.documentElement;//若要全屏页面中div，var element= document.getElementById("divID");
        //IE ActiveXObject
        if (window.ActiveXObject) {
            var WsShell = new ActiveXObject('WScript.Shell')
            WsShell.SendKeys('{ESC}');
        }
            //HTML5 W3C 提议
        else if (element.requestFullScreen) {
            document.exitFullscreen();
        }
            //IE 11
        else if (element.msRequestFullscreen) {
            document.msExitFullscreen();
        }
            // Webkit (works in Safari5.1 and Chrome 15)
        else if (element.webkitRequestFullScreen) {
            document.webkitCancelFullScreen();
        }
            // Firefox (works in nightly)
        else if (element.mozRequestFullScreen) {
            document.mozCancelFullScreen();
        }
    }



    onload = _load;
</script>