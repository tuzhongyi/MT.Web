{"version":3,"file":"WSPlayer.js","mappings":";;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC,kCAAkC,gBAAgB,KAAK;;;;;;;;ACP3C;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;;;;;;;;ACfpD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;;;;;;;ACpBR;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB;AACvB,6BAA6B,mBAAO,CAAC,GAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;;;;;;;;ACtBV;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB,gCAAgC,mBAAO,CAAC,GAAyB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;AC5BN;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,+BAA+B,mBAAO,CAAC,GAAwB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;;;;;;;ACvBZ;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB,gCAAgC,mBAAO,CAAC,GAAyB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;;;;;;;ACnCR;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,yBAAyB,mBAAO,CAAC,GAAwB;AACzD;AACA;AACA;AACA;AACA;AACA,8BAA8B,uBAAuB;AACrD;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;ACdP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1Ca;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;;;;;;;ACda;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;;;;;;;AC9BX;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,yBAAyB,mBAAO,CAAC,GAAuB;AACxD,6CAA6C,mBAAO,CAAC,GAA6C;AAClG,uCAAuC,mBAAO,CAAC,EAAuC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,eAAe,IAAI,yDAAyD;AAC1I,2DAA2D,IAAI,yDAAyD;AACxH,4DAA4D,IAAI,2DAA2D;AAC3H,8DAA8D,IAAI,6DAA6D;AAC/H,8DAA8D,IAAI,4DAA4D;AAC9H,iEAAiE,IAAI,gEAAgE;AACrI,mEAAmE,IAAI,qEAAqE;AAC5I,sEAAsE;AACtE;AACA;AACA,aAAa;AACb,wEAAwE,eAAe;AACvF;AACA;AACA;AACA,aAAa;AACb,sEAAsE,4CAA4C;AAClH;AACA;AACA;AACA,aAAa;AACb,sEAAsE,eAAe,IAAI,6DAA6D;AACtJ,oEAAoE,gBAAgB,IAAI,qEAAqE;AAC7J,wEAAwE,gBAAgB,IAAI,sEAAsE;AAClK,8DAA8D,gBAAgB,IAAI,+DAA+D;AACjJ,kEAAkE,gBAAgB,IAAI,8DAA8D;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,gBAAgB,IAAI,iEAAiaAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB;;;;;;;;AChWP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,wBAAwB,mBAAO,CAAC,EAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;;;;;;;ACxHT;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;;AC5CP;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,YAAY;;;;;;;UCbZ;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBa;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D,yBAAgB;AAChB,yBAAyB,mBAAO,CAAC,GAAuB;AACxD,4BAA4B,mBAAO,CAAC,EAA0B;AAC9D,kCAAkC,mBAAO,CAAC,GAAkC;AAC5E,oCAAoC,mBAAO,CAAC,GAAoC;AAChF,+BAA+B,mBAAO,CAAC,GAA+B;AACtE,0BAA0B,mBAAO,CAAC,GAAmB;AACrD,sBAAsB,mBAAO,CAAC,EAAe;AAC7C,iBAAiB,mBAAO,CAAC,GAAU;AACnC,eAAe,mBAAO,CAAC,GAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,eAAe;AACviBAAiB;AACjwBAAwB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,gCAAgC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sBAAsB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,kBAAkB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,+BAA+B,IAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI,gCAAgC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,yBAAgB;AAChB","sources":["webpack://@wsplayer/webpack_01/./enum/play-mode.enum.ts","webpack://@wsplayer/webpack_01/./enum/player-state.enum.ts","webpack://@wsplayer/webpack_01/./models/private-point-f.model.ts","webpack://@wsplayer/webpack_01/./models/private-rule-list.model.ts","webpack://@wsplayer/webpack_01/./models/private-rule.model.ts","webpack://@wsplayer/webpack_01/./models/private-target-list.model.ts","webpack://@wsplayer/webpack_01/./models/private-target.model.ts","webpack://@wsplayer/webpack_01/./models/ws-player-args.model.ts","webpack://@wsplayer/webpack_01/./models/ws-player-tool-control-event.model.ts","webpack://@wsplayer/webpack_01/./models/ws-player-tool-control.model.ts","webpack://@wsplayer/webpack_01/./player-subtitle.ts","webpack://@wsplayer/webpack_01/./player.tool.ts","webpack://@wsplayer/webpack_01/./plugin.ts","webpack://@wsplayer/webpack_01/./tools/event-emitter.ts","webpack://@wsplayer/webpack_01/./tools/wait.ts","webpack://@wsplayer/webpack_01/webpack/bootstrap","webpack://@wsplayer/webpack_01/./player.ts"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlayMode = void 0;\r\nvar PlayMode;\r\n(function (PlayMode) {\r\n    PlayMode[\"vod\"] = \"vod\";\r\n    PlayMode[\"live\"] = \"live\";\r\n})(PlayMode = exports.PlayMode || (exports.PlayMode = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlayerState = void 0;\r\nvar PlayerState;\r\n(function (PlayerState) {\r\n    PlayerState[PlayerState[\"ready\"] = 0] = \"ready\";\r\n    PlayerState[PlayerState[\"playing\"] = 1] = \"playing\";\r\n    PlayerState[PlayerState[\"pause\"] = 2] = \"pause\";\r\n    PlayerState[PlayerState[\"slow\"] = 3] = \"slow\";\r\n    PlayerState[PlayerState[\"fast\"] = 4] = \"fast\";\r\n    PlayerState[PlayerState[\"end\"] = 5] = \"end\";\r\n    PlayerState[PlayerState[\"opening\"] = 6] = \"opening\";\r\n    PlayerState[PlayerState[\"closing\"] = 7] = \"closing\";\r\n    PlayerState[PlayerState[\"frame\"] = 8] = \"frame\";\r\n    PlayerState[PlayerState[\"closed\"] = 255] = \"closed\";\r\n})(PlayerState = exports.PlayerState || (exports.PlayerState = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PrivatePointF = void 0;\r\nclass PrivatePointF {\r\n    constructor() {\r\n        this.X = 0.0;\r\n        this.Y = 0.0;\r\n    }\r\n    static load(dataview, offset) {\r\n        let struct = new PrivatePointF();\r\n        struct.X = dataview.getFloat32(offset, true);\r\n        offset += 4;\r\n        struct.Y = dataview.getFloat32(offset, true);\r\n        offset += 4;\r\n        return {\r\n            struct: struct,\r\n            offset: offset,\r\n        };\r\n    }\r\n}\r\nexports.PrivatePointF = PrivatePointF;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PrivateRuleList = void 0;\r\nconst private_rule_model_1 = require(\"./private-rule.model\");\r\nclass PrivateRuleList {\r\n    constructor() {\r\n        this.RuleNumber = 0;\r\n        this.Rule = [];\r\n    }\r\n    static load(dataview, offset) {\r\n        let struct = new PrivateRuleList();\r\n        struct.RuleNumber = dataview.getInt32(offset, true);\r\n        struct.Rule = [];\r\n        offset += 4;\r\n        for (let i = 0; i < struct.RuleNumber; i++) {\r\n            let result = private_rule_model_1.PrivateRule.load(dataview, offset);\r\n            struct.Rule.push(result.struct);\r\n            offset = result.offset;\r\n        }\r\n        return struct;\r\n    }\r\n}\r\nexports.PrivateRuleList = PrivateRuleList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PrivateRule = void 0;\r\nconst private_point_f_model_1 = require(\"./private-point-f.model\");\r\nclass PrivateRule {\r\n    constructor() {\r\n        this.RuleID = 0;\r\n        this.VertexNumber = 0;\r\n        this.Point = [];\r\n    }\r\n    static load(dataview, offset) {\r\n        let struct = new PrivateRule();\r\n        struct.RuleID = dataview.getInt32(offset, true);\r\n        offset += 4;\r\n        struct.VertexNumber = dataview.getInt32(offset, true);\r\n        offset += 4;\r\n        struct.Point = [];\r\n        for (let i = 0; i < struct.VertexNumber; i++) {\r\n            let result = private_point_f_model_1.PrivatePointF.load(dataview, offset);\r\n            struct.Point.push(result.struct);\r\n            offset = result.offset;\r\n        }\r\n        return {\r\n            struct: struct,\r\n            offset: offset,\r\n        };\r\n    }\r\n}\r\nexports.PrivateRule = PrivateRule;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PrivateTargetList = void 0;\r\nconst private_target_model_1 = require(\"./private-target.model\");\r\nclass PrivateTargetList {\r\n    constructor() {\r\n        this.TargetNumber = 0;\r\n        this.Target = [];\r\n    }\r\n    static load(dataview, offset) {\r\n        let struct = new PrivateTargetList();\r\n        struct.TargetNumber = dataview.getInt32(offset, true);\r\n        offset += 4;\r\n        struct.Target = [];\r\n        for (let i = 0; i < 16; i++) {\r\n            let result = private_target_model_1.PrivateTarget.load(dataview, offset);\r\n            struct.Target.push(result.struct);\r\n            offset = result.offset;\r\n        }\r\n        struct.Target.slice(0, struct.TargetNumber);\r\n        return struct;\r\n    }\r\n}\r\nexports.PrivateTargetList = PrivateTargetList;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PrivateTarget = void 0;\r\nconst private_point_f_model_1 = require(\"./private-point-f.model\");\r\nclass PrivateTarget {\r\n    constructor() {\r\n        this.Id = 0;\r\n        this.BlobType = 0;\r\n        this.Confidence = 0;\r\n        this.VertexNumber = 0;\r\n        this.Point = [];\r\n    }\r\n    static load(dataview, offset) {\r\n        let struct = new PrivateTarget();\r\n        struct.Id = dataview.getInt32(offset, true);\r\n        offset += 4;\r\n        struct.BlobType = dataview.getInt32(offset, true);\r\n        offset += 4;\r\n        struct.Confidence = dataview.getInt32(offset, true);\r\n        offset += 4;\r\n        struct.VertexNumber = dataview.getInt32(offset, true);\r\n        offset += 4;\r\n        struct.Point = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            let result = private_point_f_model_1.PrivatePointF.load(dataview, offset);\r\n            struct.Point.push(result.struct);\r\n            offset = result.offset;\r\n        }\r\n        struct.Point = struct.Point.slice(0, struct.VertexNumber);\r\n        return {\r\n            struct: struct,\r\n            offset: offset,\r\n        };\r\n    }\r\n}\r\nexports.PrivateTarget = PrivateTarget;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WSPlayerArgs = void 0;\r\nconst play_mode_enum_1 = require(\"../enum/play-mode.enum\");\r\nclass WSPlayerArgs {\r\n    constructor() {\r\n        this.width = '100%';\r\n        this.height = '100%';\r\n        this.elementId = 'video';\r\n        this.path = `http://${document.location.host}/codebase/`;\r\n        this.mode = play_mode_enum_1.PlayMode.live;\r\n        this.url = '';\r\n    }\r\n}\r\nexports.WSPlayerArgs = WSPlayerArgs;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WSPlayerToolEvent = void 0;\r\nclass WSPlayerToolEvent {\r\n    constructor() {\r\n        this.control = new WSPlayerToolControlEvent();\r\n    }\r\n}\r\nexports.WSPlayerToolEvent = WSPlayerToolEvent;\r\nclass WSPlayerToolControlEvent {\r\n    constructor() {\r\n        this.play = new WSPlayerToolControlClickEvent();\r\n        this.stop = new WSPlayerToolControlClickEvent();\r\n        this.fullscreen = new WSPlayerToolControlClickEvent();\r\n        this.capturepicture = new WSPlayerToolControlClickEvent();\r\n        this.slow = new WSPlayerToolControlClickEvent();\r\n        this.fast = new WSPlayerToolControlClickEvent();\r\n        this.forward = new WSPlayerToolControlClickEvent();\r\n        this.position = new WSPlayerToolControlMouseEvent();\r\n        this.jump = {\r\n            back: new WSPlayerToolControlClickEvent(),\r\n            forward: new WSPlayerToolControlClickEvent(),\r\n        };\r\n        this.volume = {\r\n            icon: new WSPlayerToolControlClickEvent(),\r\n            slide: new WSPlayerToolControlInputEvent(),\r\n        };\r\n        this.rule = new WSPlayerToolOpenControlClickEvent();\r\n        this.subtitle = new WSPlayerToolOpenControlClickEvent();\r\n    }\r\n}\r\nclass WSPlayerToolControlClickEvent {\r\n}\r\nclass WSPlayerToolControlInputEvent {\r\n}\r\nclass WSPlayerToolOpenControlClickEvent extends WSPlayerToolControlClickEvent {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.opened = false;\r\n    }\r\n}\r\nclass WSPlayerToolControlMouseEvent {\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WSPlayerToolControl = void 0;\r\nclass WSPlayerToolControl {\r\n    constructor() {\r\n        this.volume = new WSPlayerToolControlVolume();\r\n        this.isMoudseDown = false;\r\n    }\r\n}\r\nexports.WSPlayerToolControl = WSPlayerToolControl;\r\nclass WSPlayerToolControlVolume {\r\n    constructor() {\r\n        this.value = 0;\r\n    }\r\n}\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WSPlayerSubtitle = void 0;\r\nclass WSPlayerSubtitle {\r\n    constructor() { }\r\n    get enabled() {\r\n        if (this.element) {\r\n            return !this.element.style.display;\r\n        }\r\n        return false;\r\n    }\r\n    set enabled(v) {\r\n        if (this.element) {\r\n            this.element.style.display = v ? '' : 'none';\r\n        }\r\n    }\r\n    appendElement(parent) {\r\n        this.element = document.createElement('div');\r\n        this.element.className = 'subtitle';\r\n        this.content = document.createElement('div');\r\n        this.content.className = 'subtitle-content';\r\n        this.element.appendChild(this.content);\r\n        parent.appendChild(this.element);\r\n    }\r\n    set(text) {\r\n        if (this.content && this.enabled) {\r\n            this.content.innerText = text;\r\n        }\r\n    }\r\n}\r\nexports.WSPlayerSubtitle = WSPlayerSubtitle;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WSPlayerTool = void 0;\r\nconst play_mode_enum_1 = require(\"./enum/play-mode.enum\");\r\nconst ws_player_tool_control_event_model_1 = require(\"./models/ws-player-tool-control-event.model\");\r\nconst ws_player_tool_control_model_1 = require(\"./models/ws-player-tool-control.model\");\r\nclass WSPlayerTool {\r\n    constructor(element, mode) {\r\n        this.control = new ws_player_tool_control_model_1.WSPlayerToolControl();\r\n        this.event = new ws_player_tool_control_event_model_1.WSPlayerToolEvent();\r\n        this.display = false;\r\n        this.createElements = () => {\r\n            var ul = document.createElement('ul');\r\n            this.control.content.appendChild(ul);\r\n            this.control.play = this.createElement(ul, 'a', { width: '40px' }, { className: 'play glyphicon glyphicon-play', title: '播放' });\r\n            //this.control.stop = createElement(ul, \"a\", {}, { className: \"stop glyphicon glyphicon-stop\", title: \"停止\" });\r\n            //this.control.pause = createElement(ul, \"a\", {}, { className: \"pause glyphicon glyphicon-pause\", title: \"暂停\" });\r\n            this.control.slow = this.createElement(ul, 'a', {}, { className: 'slow glyphicon glyphicon-backward', title: '慢放' });\r\n            this.control.fast = this.createElement(ul, 'a', {}, { className: 'fast glyphicon glyphicon-forward', title: '快进' });\r\n            this.control.forward = this.createElement(ul, 'a', {}, { className: 'glyphicon glyphicon glyphicon-eject', title: '单帧进' });\r\n            this.control.jump_back = this.createElement(ul, 'a', {}, { className: 'jump_back glyphicon glyphicon-share-alt', title: '退30秒' });\r\n            this.control.jump_forward = this.createElement(ul, 'a', {}, {\r\n                className: 'jump_forward glyphicon glyphicon-share-alt',\r\n                title: '进30秒',\r\n            });\r\n            this.control.begin_time = this.createElement(ul, 'label', { width: '60px' }, {\r\n                className: 'begin_time',\r\n                innerText: '00:00:00',\r\n                title: '当前时间',\r\n            });\r\n            this.control.position = this.createElement(ul, 'input', { width: 'calc(100% - 452px)', flexGrow: '1' }, {\r\n                className: 'position',\r\n                title: '00:00:00',\r\n                type: 'range',\r\n            });\r\n            this.control.end_time = this.createElement(ul, 'label', { width: '60px' }, { className: 'end_time', title: '结束时间', innerText: '00:00:00' });\r\n            this.control.fullscreen = this.createElement(ul, 'a', { float: 'right' }, { className: 'fullscreen glyphicon glyphicon-fullscreen', title: '全屏' });\r\n            this.control.capturepicture = this.createElement(ul, 'a', { float: 'right' }, { className: 'capturepicture glyphicon glyphicon-picture', title: '截图' });\r\n            this.control.rule = this.createElement(ul, 'a', { float: 'right' }, { className: 'rule howell-icon-garbage-target-off', title: '目标' });\r\n            this.control.subtitle = this.createElement(ul, 'a', { float: 'right' }, { className: 'subtitle howell-icon-subtitles_off', title: '字幕' });\r\n            if (this.mode == play_mode_enum_1.PlayMode.live) {\r\n                //this.control.stop.style.display = \"none\";\r\n                this.control.slow.style.display = 'none';\r\n                this.control.fast.style.display = 'none';\r\n                this.control.forward.style.display = 'none';\r\n                this.control.jump_back.style.display = 'none';\r\n                this.control.jump_forward.style.display = 'none';\r\n                this.control.begin_time.style.display = 'none';\r\n                this.control.position.style.display = 'none';\r\n                this.control.end_time.style.display = 'none';\r\n            }\r\n            this.control.volume.icon = this.createElement(ul, 'a', { float: 'right' }, { className: 'volume glyphicon glyphicon-volume-off', title: '音量' });\r\n            this.control.volume.panel = document.createElement('div');\r\n            // volume_panel.style.display = \"none\";\r\n            this.control.volume.panel.className = 'volume_panel';\r\n            this.control.volume.panel.style.display = 'none';\r\n            this.tools.appendChild(this.control.volume.panel);\r\n            this.control.volume.slide = document.createElement('input');\r\n            this.control.volume.slide.type = 'range';\r\n            this.control.volume.slide.min = '0';\r\n            this.control.volume.slide.max = '100';\r\n            this.control.volume.slide.value = '0';\r\n            this.control.volume.slide.style.backgroundSize = '0% 100%';\r\n            this.control.volume.slide.step = '10';\r\n            this.control.volume.panel.appendChild(this.control.volume.slide);\r\n            this.registEvent();\r\n        };\r\n        this.element = element;\r\n        this.mode = mode;\r\n        this.tools = document.createElement('div');\r\n        this.initTools();\r\n    }\r\n    initTools() {\r\n        this.tools.className = 'tools';\r\n        //tools.style.display = \"none\";\r\n        this.element.appendChild(this.tools);\r\n        this.control.content = document.createElement('div');\r\n        this.control.content.className = 'tools-content';\r\n        this.tools.appendChild(this.control.content);\r\n    }\r\n    createElement(ul, type, li_styles, ctr_params, ctr_styles) {\r\n        var li = document.createElement('li');\r\n        if (li_styles) {\r\n            for (const key in li_styles) {\r\n                li.style[key] = li_styles[key];\r\n            }\r\n        }\r\n        ul.appendChild(li);\r\n        var ctr = document.createElement(type);\r\n        if (ctr_params) {\r\n            for (const key in ctr_params) {\r\n                // ctr.setAttribute(key, ctr_params[key])\r\n                ctr[key] = ctr_params[key];\r\n            }\r\n        }\r\n        if (ctr_styles) {\r\n            for (const key in ctr_styles) {\r\n                ctr.style[key] = ctr_styles[key];\r\n            }\r\n        }\r\n        li.appendChild(ctr);\r\n        return ctr;\r\n    }\r\n    destroy() {\r\n        if (this.element && this.element.parentElement) {\r\n            this.element.parentElement.removeChild(this.element);\r\n        }\r\n    }\r\n    onSlideInput(ctr) {\r\n        var value = (parseFloat(ctr.value) - parseFloat(ctr.min)) /\r\n            (parseFloat(ctr.max) - parseFloat(ctr.min));\r\n        var valStr = value * 100 + '% 100%';\r\n        ctr.style.backgroundSize = valStr;\r\n        ctr.title = '音量：' + value * 100 + '%';\r\n        this.control.volume.icon.title = ctr.title;\r\n        this.control.volume.value = parseInt(ctr.value);\r\n        if (value == 0) {\r\n            ctr.opened = false;\r\n            this.control.volume.icon.className =\r\n                'volume glyphicon glyphicon-volume-off';\r\n        }\r\n        else {\r\n            ctr.opened = true;\r\n            this.control.volume.icon.className =\r\n                'volume glyphicon glyphicon-volume-up';\r\n        }\r\n    }\r\n    registEvent() {\r\n        this.control.volume.slide.addEventListener('input', (e) => {\r\n            this.onSlideInput(this.control.volume.slide);\r\n            if (this.event.control.volume.slide.input) {\r\n                this.event.control.volume.slide.input(e);\r\n            }\r\n        });\r\n        this.control.volume.icon.addEventListener('mouseover', () => {\r\n            this.display = true;\r\n            this.control.volume.panel.style.display = '';\r\n        });\r\n        this.control.volume.icon.addEventListener('click', (e) => {\r\n            setTimeout(() => {\r\n                if (this.control.volume.value == 0)\r\n                    this.control.volume.value = 80;\r\n                var value = this.control.volume.value;\r\n                if (parseFloat(this.control.volume.slide.value) > 0) {\r\n                    this.control.volume.slide.value = '0';\r\n                }\r\n                else {\r\n                    this.control.volume.slide.value = this.control.volume.value.toString();\r\n                }\r\n                this.onSlideInput(this.control.volume.slide);\r\n                this.control.volume.value = value;\r\n            }, 10);\r\n            if (this.event.control.volume.icon.click) {\r\n                this.event.control.volume.icon.click(e);\r\n            }\r\n        });\r\n        this.control.volume.icon.addEventListener('dblclick', () => {\r\n            if (this.control.volume.value == 0)\r\n                this.control.volume.value = 80;\r\n            var value = this.control.volume.value;\r\n            if (parseFloat(this.control.volume.slide.value) > 0) {\r\n                this.control.volume.slide.value = '0';\r\n            }\r\n            else {\r\n                this.control.volume.slide.value = this.control.volume.value.toString();\r\n            }\r\n            this.onSlideInput(this.control.volume.slide);\r\n            this.control.volume.value = value;\r\n            // if (this.opened) {\r\n            //     this.control.volume.icon.className = \"volume glyphicon glyphicon-volume-up\";\r\n            //     this.opened = true;\r\n            //     if(this.value == 0)\r\n            //     {\r\n            //         this.value = this.control.volume.value;\r\n            //     }\r\n            // }\r\n            // else {\r\n            //     this.control.volume.icon.className = \"volume glyphicon glyphicon-volume-off\";\r\n            //     this.opened = false;\r\n            // }\r\n        });\r\n        this.control.volume.icon.addEventListener('mouseleave', () => {\r\n            setTimeout(() => {\r\n                if (this.display == false)\r\n                    this.control.volume.panel.style.display = 'none';\r\n            }, 100);\r\n            this.display = false;\r\n        });\r\n        this.control.volume.panel.addEventListener('mouseleave', () => {\r\n            setTimeout(() => {\r\n                if (this.display === false)\r\n                    this.control.volume.panel.style.display = 'none';\r\n            }, 100);\r\n            this.display = false;\r\n        });\r\n        this.control.volume.panel.addEventListener('mouseover', () => {\r\n            this.display = true;\r\n        });\r\n        // var li_stop = document.createElement(\"li\");\r\n        // ul.appendChild(li_stop);\r\n        // this.control.stop = document.createElement(\"a\");\r\n        // this.control.stop.className = \"stop howell-icon-Square\"\r\n        // this.control.stop.style.display = \"none\";\r\n        // li_stop.appendChild(this.control.stop);\r\n        // var li_fullscreen = document.createElement(\"li\");\r\n        // li_fullscreen.style.float = \"right\";\r\n        // ul.appendChild(li_fullscreen);\r\n        // this.control.fullscreen = document.createElement(\"a\");\r\n        // this.control.fullscreen.className = \"fullscreen glyphicon glyphicon-fullscreen\"\r\n        // li_fullscreen.appendChild(this.control.fullscreen);\r\n        // this.control.play.addEventListener(\"click\", function () {\r\n        //     this.control.play.className = \"play glyphicon glyphicon-pause\";\r\n        //     //this.control.pause.style.display = \"\";\r\n        // });\r\n        // this.control.pause.addEventListener(\"click\", function () {\r\n        //     this.control.play.style.display = \"\";\r\n        //     this.control.pause.style.display = \"none\";\r\n        // });\r\n        if (this.control.position) {\r\n            this.control.position.addEventListener('input', () => {\r\n                let ctr = this.control.position;\r\n                var value = (parseFloat(ctr.value) - parseFloat(ctr.min)) /\r\n                    (parseFloat(ctr.max) - parseFloat(ctr.min));\r\n                var valStr = value * 100 + '% 100%';\r\n                ctr.style.backgroundSize = valStr;\r\n            });\r\n            this.control.position.addEventListener('mousemove', (e) => { });\r\n        }\r\n        if (this.control.play) {\r\n            this.control.play.addEventListener('click', (e) => {\r\n                if (this.event.control.play.click) {\r\n                    this.event.control.play.click(e);\r\n                }\r\n            });\r\n        }\r\n        if (this.control.stop) {\r\n            this.control.stop.addEventListener('click', (e) => {\r\n                if (this.event.control.stop.click) {\r\n                    this.event.control.stop.click(e);\r\n                }\r\n            });\r\n        }\r\n        if (this.control.fullscreen) {\r\n            this.control.fullscreen.addEventListener('click', (e) => {\r\n                if (this.event.control.fullscreen.click) {\r\n                    this.event.control.fullscreen.click(e);\r\n                }\r\n            });\r\n        }\r\n        if (this.control.capturepicture) {\r\n            this.control.capturepicture.addEventListener('click', (e) => {\r\n                if (this.event.control.capturepicture.click) {\r\n                    this.event.control.capturepicture.click(e);\r\n                }\r\n            });\r\n        }\r\n        if (this.control.slow) {\r\n            this.control.slow.addEventListener('click', (e) => {\r\n                if (this.event.control.slow.click) {\r\n                    this.event.control.slow.click(e);\r\n                }\r\n            });\r\n        }\r\n        if (this.control.fast) {\r\n            this.control.fast.addEventListener('click', (e) => {\r\n                if (this.event.control.fast.click) {\r\n                    this.event.control.fast.click(e);\r\n                }\r\n            });\r\n        }\r\n        if (this.control.forward) {\r\n            this.control.forward.addEventListener('click', (e) => {\r\n                if (this.event.control.forward.click) {\r\n                    this.event.control.forward.click(e);\r\n                }\r\n            });\r\n        }\r\n        if (this.control.position) {\r\n            this.control.position.addEventListener('mousedown', (e) => {\r\n                if (this.event.control.position.mousedown) {\r\n                    this.event.control.position.mousedown(e);\r\n                }\r\n            });\r\n            this.control.position.addEventListener('mouseup', (e) => {\r\n                if (this.event.control.position.mouseup) {\r\n                    this.event.control.position.mouseup(e);\r\n                }\r\n            });\r\n            this.control.position.addEventListener('mousemove', (e) => {\r\n                if (this.event.control.position.mousemove) {\r\n                    this.event.control.position.mousemove(e);\r\n                }\r\n            });\r\n        }\r\n        if (this.control.jump_back) {\r\n            this.control.jump_back.addEventListener('click', (e) => {\r\n                if (this.event.control.jump.back.click) {\r\n                    this.event.control.jump.back.click(e);\r\n                }\r\n            });\r\n        }\r\n        if (this.control.jump_forward) {\r\n            this.control.jump_forward.addEventListener('click', (e) => {\r\n                if (this.event.control.jump.forward.click) {\r\n                    this.event.control.jump.forward.click(e);\r\n                }\r\n            });\r\n        }\r\n        if (this.control.volume.slide) {\r\n            this.control.volume.slide.addEventListener('input', (e) => {\r\n                if (this.event.control.volume.slide.input) {\r\n                    this.event.control.volume.slide.input(e.currentTarget);\r\n                }\r\n            });\r\n        }\r\n        if (this.control.rule) {\r\n            this.control.rule.addEventListener('click', (e) => {\r\n                this.event.control.rule.opened = !this.event.control.rule.opened;\r\n                if (this.event.control.rule.opened) {\r\n                    e.target.classList.remove('howell-icon-garbage-target-off');\r\n                    e.target.classList.add('howell-icon-garbage-target-on');\r\n                }\r\n                else {\r\n                    e.target.classList.remove('howell-icon-garbage-target-on');\r\n                    e.target.classList.add('howell-icon-garbage-target-off');\r\n                }\r\n                if (this.event.control.rule.click) {\r\n                    this.event.control.rule.click(e);\r\n                }\r\n            });\r\n        }\r\n        if (this.control.subtitle) {\r\n            this.control.subtitle.addEventListener('click', (e) => {\r\n                this.event.control.subtitle.opened = !this.event.control.subtitle.opened;\r\n                if (!e.target)\r\n                    return;\r\n                let target = e.target;\r\n                if (this.event.control.subtitle.opened) {\r\n                    target.classList.remove('howell-icon-subtitles_off');\r\n                    target.classList.add('howell-icon-subtitles');\r\n                }\r\n                else {\r\n                    target.classList.remove('howell-icon-subtitles');\r\n                    target.classList.add('howell-icon-subtitles_off');\r\n                }\r\n                if (this.event.control.subtitle.click) {\r\n                    this.event.control.subtitle.click(e);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nexports.WSPlayerTool = WSPlayerTool;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WSPlayerPlugin = void 0;\r\nconst event_emitter_1 = require(\"./tools/event-emitter\");\r\nclass WSPlayerPlugin {\r\n    constructor(args) {\r\n        var _a;\r\n        this.event = new event_emitter_1.EventEmitter();\r\n        this.soundOpened = false;\r\n        this.loaded = false;\r\n        this.id = 'wsplayer_script';\r\n        this.timeout = 10;\r\n        this.args = {\r\n            iCurrentSplit: 1,\r\n            iHeight: args.height,\r\n            iMaxSplit: 1,\r\n            iType: 1,\r\n            iWidth: args.width,\r\n            szBasePath: args.path,\r\n            szId: args.elementId,\r\n        };\r\n        this.path = args.path;\r\n        if (args.loaded) {\r\n            this.event.on('loaded', () => {\r\n                if (args.loaded)\r\n                    args.loaded();\r\n            });\r\n        }\r\n        this.script =\r\n            (_a = document.getElementById(this.id)) !== null && _a !== void 0 ? _a : undefined;\r\n        this.init();\r\n    }\r\n    init() {\r\n        if (!this.script) {\r\n            this.script = document.createElement('script');\r\n            this.script.type = 'text/javascript';\r\n            this.script.src =\r\n                this.path + 'jsPlugin-1.2.0.min.js?v=' + new Date().getTime();\r\n            document.getElementsByTagName('head')[0].appendChild(this.script);\r\n            this.script.onload = this.script.onreadystatechange = () => {\r\n                this.plugin = new JSPlugin(this.args);\r\n                this.event.emit('loaded');\r\n                this.loaded = true;\r\n            };\r\n        }\r\n        else {\r\n            this.plugin = new JSPlugin(this.args);\r\n            this.event.emit('loaded');\r\n            this.loaded = true;\r\n        }\r\n    }\r\n    load() { }\r\n    wait() {\r\n        return new Promise((resolve) => {\r\n            let handle = setInterval(() => {\r\n                if (this.plugin) {\r\n                    resolve(0);\r\n                    clearInterval(handle);\r\n                }\r\n            }, this.timeout);\r\n        });\r\n    }\r\n    JS_Play(url, callabck) {\r\n        return this.plugin.JS_Play(url, callabck, 0);\r\n    }\r\n    JS_GetWndStatus() {\r\n        return this.plugin.JS_GetWndStatus(0);\r\n    }\r\n    JS_Resize(width, height) {\r\n        return this.plugin.JS_Resize(width, height);\r\n    }\r\n    JS_OpenSound() {\r\n        return this.plugin.JS_OpenSound(0);\r\n    }\r\n    JS_CloseSound() {\r\n        return this.plugin.JS_CloseSound();\r\n    }\r\n    JS_GetVolume(value) {\r\n        return this.plugin.JS_GetVolume(0, value);\r\n    }\r\n    JS_SetVolume(value) {\r\n        return this.plugin.JS_SetVolume(0, value);\r\n    }\r\n    JS_Seek(value, callback) {\r\n        return this.plugin.JS_Seek(0, value, callback);\r\n    }\r\n    JS_Fast() {\r\n        return this.plugin.JS_Fast(0);\r\n    }\r\n    JS_Slow() {\r\n        return this.plugin.JS_Slow(0);\r\n    }\r\n    JS_CapturePictureData() {\r\n        return this.plugin.JS_CapturePictureData(0);\r\n    }\r\n    JS_Pause() {\r\n        return this.plugin.JS_Pause(0);\r\n    }\r\n    JS_FrameForward() {\r\n        return this.plugin.JS_FrameForward(0);\r\n    }\r\n    JS_Stop() {\r\n        return this.plugin.JS_Stop(0);\r\n    }\r\n    JS_FullScreenSingle() {\r\n        return this.plugin.JS_FullScreenSingle(0);\r\n    }\r\n    JS_Download(filename, type) {\r\n        return this.plugin.JS_Download(filename, type);\r\n    }\r\n    JS_CapturePicture(name, type) {\r\n        return this.plugin.JS_CapturePicture(0, name, type);\r\n    }\r\n    JS_Resume() {\r\n        return this.plugin.JS_Resume(0);\r\n    }\r\n    JS_GetOSDTime() {\r\n        return this.plugin.JS_GetOSDTime(0);\r\n    }\r\n}\r\nexports.WSPlayerPlugin = WSPlayerPlugin;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventEmitter = void 0;\r\nclass EventEmitter {\r\n    constructor() {\r\n        this.eventMap = {};\r\n    }\r\n    get keys() {\r\n        let keys = [];\r\n        for (const key in this.eventMap) {\r\n            keys.push(key);\r\n        }\r\n        return keys;\r\n    }\r\n    // 添加对应事件的监听函数\r\n    on(eventName, listener) {\r\n        if (!this.eventMap[eventName]) {\r\n            this.eventMap[eventName] = [];\r\n        }\r\n        this.eventMap[eventName].push(listener);\r\n        return this;\r\n    }\r\n    // 触发事件\r\n    emit(eventName, ...args) {\r\n        const listeners = this.eventMap[eventName];\r\n        if (!listeners || listeners.length === 0)\r\n            return false;\r\n        listeners.forEach((listener) => {\r\n            listener(...args);\r\n        });\r\n        return true;\r\n    }\r\n    // 取消对应事件的监听\r\n    off(eventName, listener) {\r\n        const listeners = this.eventMap[eventName];\r\n        if (listeners && listeners.length > 0) {\r\n            const index = listeners.indexOf(listener);\r\n            if (index > -1) {\r\n                listeners.splice(index, 1);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexports.EventEmitter = EventEmitter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.wait = void 0;\r\nfunction wait(whether, reject, timeout = 100) {\r\n    setTimeout(() => {\r\n        if (whether()) {\r\n            reject();\r\n        }\r\n        else {\r\n            wait(whether, reject, timeout);\r\n        }\r\n    }, timeout);\r\n}\r\nexports.wait = wait;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WSPlayer = void 0;\r\nconst play_mode_enum_1 = require(\"./enum/play-mode.enum\");\r\nconst player_state_enum_1 = require(\"./enum/player-state.enum\");\r\nconst private_rule_list_model_1 = require(\"./models/private-rule-list.model\");\r\nconst private_target_list_model_1 = require(\"./models/private-target-list.model\");\r\nconst ws_player_args_model_1 = require(\"./models/ws-player-args.model\");\r\nconst player_subtitle_1 = require(\"./player-subtitle\");\r\nconst player_tool_1 = require(\"./player.tool\");\r\nconst plugin_1 = require(\"./plugin\");\r\nconst wait_1 = require(\"./tools/wait\");\r\nclass WSPlayer {\r\n    constructor(args) {\r\n        this.url = '';\r\n        this.soundOpened = false;\r\n        this.volume = 0;\r\n        this.outsidefullscreen = false;\r\n        this.clientWidth = 0;\r\n        this.clientHeight = 0;\r\n        this.title = '';\r\n        this.name = '';\r\n        this.playback_time = {};\r\n        this.subtitle = new player_subtitle_1.WSPlayerSubtitle();\r\n        this._status = player_state_enum_1.PlayerState.ready;\r\n        this.args = new ws_player_args_model_1.WSPlayerArgs();\r\n        this.loaded = false;\r\n        this._fullScreen = false;\r\n        this.timeout = 10;\r\n        this.getCapturePictureData = () => {\r\n            return this.plugin.JS_CapturePictureData();\r\n            // var promise = plugin.JS_CapturePictureData(0)\r\n            // promise.then((data) => {\r\n            //   if (this.onCapturePicture) {\r\n            //     this.onCapturePicture(data);\r\n            //   }\r\n            // });\r\n        };\r\n        this.closeSound = () => {\r\n            this.doing(() => {\r\n                if (!this.soundOpened)\r\n                    return;\r\n                this.plugin.JS_CloseSound();\r\n                this.soundOpened = false;\r\n            });\r\n        };\r\n        Object.assign(this.args, args);\r\n        if (args.url) {\r\n            if (args.url.indexOf('vod') > 0) {\r\n                args.mode = play_mode_enum_1.PlayMode.vod;\r\n            }\r\n        }\r\n        this.url = args.url;\r\n        this.loadPlugin();\r\n        this.initElement(args.elementId);\r\n        this.plugin = new plugin_1.WSPlayerPlugin({\r\n            width: this.args.width,\r\n            height: this.args.height,\r\n            path: this.args.path,\r\n            elementId: this.args.elementId,\r\n        });\r\n        this.regist();\r\n        this.check();\r\n    }\r\n    get PlayMode() {\r\n        return this.args.mode;\r\n    }\r\n    get FullScreen() {\r\n        return !!(document.fullscreen ||\r\n            document.mozFullScreen ||\r\n            document.webkitIsFullScreen ||\r\n            document.webkitFullScreen ||\r\n            document.msFullScreen);\r\n    }\r\n    set FullScreen(v) {\r\n        this._fullScreen = v;\r\n        var display = '';\r\n        if (this._fullScreen)\r\n            display = 'block';\r\n        if (this.tools) {\r\n            this.tools.control.content.style.display = display;\r\n        }\r\n    }\r\n    get status() {\r\n        return this._status;\r\n    }\r\n    set status(v) {\r\n        if (this._status == v)\r\n            return;\r\n        this._status = v;\r\n        Promise.resolve().then(() => {\r\n            if (this.onStatusChanged) {\r\n                this.onStatusChanged(this._status);\r\n            }\r\n        });\r\n    }\r\n    regist() {\r\n        this.plugin.event.on('loaded', this.onPluginLoaded.bind(this));\r\n    }\r\n    initSubtitle() {\r\n        this.subtitle.appendElement(this.element);\r\n    }\r\n    loadPlugin() {\r\n        let ss = document.getElementsByTagName('script');\r\n        for (let i = 0; i < ss.length; i++) {\r\n            var index = 0;\r\n            if ((index = ss[i].src.toLowerCase().lastIndexOf('wsplayer.js')) > 0) {\r\n                this.args.path = ss[i].src.substr(0, index) + 'codebase/';\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    initElement(elementId) {\r\n        this.element = document.getElementById(elementId);\r\n        if (this.element) {\r\n            this.element.style.backgroundColor = 'transparent';\r\n            this.clientWidth = this.element.offsetWidth;\r\n            this.clientHeight = this.element.offsetHeight;\r\n        }\r\n        this.sizeHandle = setInterval(() => {\r\n            if (this.clientWidth > 0 && this.clientHeight > 0) {\r\n                clearInterval(this.sizeHandle);\r\n                return;\r\n            }\r\n            if (this.element) {\r\n                this.clientWidth = this.element.offsetWidth;\r\n                this.clientHeight = this.element.offsetHeight;\r\n            }\r\n        }, 100);\r\n        var body = document.getElementsByTagName('body')[0];\r\n        body.addEventListener('click', () => {\r\n            if (this.onViewerClicked) {\r\n                this.onViewerClicked();\r\n            }\r\n        });\r\n    }\r\n    initTools() {\r\n        if (this.tools && this.tools.control) {\r\n            this.volume = this.tools.control.volume.value;\r\n        }\r\n        this.tools = new player_tool_1.WSPlayerTool(this.element, this.PlayMode);\r\n        this.tools.createElements();\r\n        this.tools.control.volume.value = this.volume;\r\n        this.tools.event.control.play.click = () => {\r\n            switch (this.status) {\r\n                case player_state_enum_1.PlayerState.ready:\r\n                    this.play();\r\n                    this.buttonClick('play');\r\n                    break;\r\n                case player_state_enum_1.PlayerState.end:\r\n                    this.seek(0);\r\n                    this.resume();\r\n                    this.buttonClick('resume');\r\n                    break;\r\n                case player_state_enum_1.PlayerState.fast:\r\n                case player_state_enum_1.PlayerState.slow:\r\n                    //this.play();\r\n                    this.speedResume();\r\n                    this.buttonClick('resume');\r\n                    break;\r\n                case player_state_enum_1.PlayerState.pause:\r\n                case player_state_enum_1.PlayerState.frame:\r\n                    this.resume();\r\n                    this.buttonClick('resume');\r\n                    break;\r\n                case player_state_enum_1.PlayerState.playing:\r\n                    if (this.args.mode == play_mode_enum_1.PlayMode.vod) {\r\n                        this.pause();\r\n                        this.buttonClick('pause');\r\n                    }\r\n                    else {\r\n                        this.stop();\r\n                        this.buttonClick('stop');\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n        this.tools.event.control.stop.click = () => {\r\n            if (this.status == player_state_enum_1.PlayerState.ready)\r\n                return;\r\n            this.stop();\r\n            this.buttonClick('stop');\r\n        };\r\n        this.tools.event.control.fullscreen.click = () => {\r\n            if (this.status == player_state_enum_1.PlayerState.ready)\r\n                return;\r\n            if (this.FullScreen) {\r\n                this.fullExit();\r\n            }\r\n            else {\r\n                this.fullScreen();\r\n            }\r\n            this.buttonClick('fullscreen');\r\n        };\r\n        this.tools.event.control.capturepicture.click = () => {\r\n            if (this.status == player_state_enum_1.PlayerState.ready)\r\n                return;\r\n            this.capturePicture();\r\n            this.buttonClick('capturepicture');\r\n        };\r\n        this.tools.event.control.slow.click = () => {\r\n            if (this.status == player_state_enum_1.PlayerState.ready)\r\n                return;\r\n            this.slow();\r\n            this.buttonClick('slow');\r\n        };\r\n        this.tools.event.control.fast.click = () => {\r\n            if (this.status == player_state_enum_1.PlayerState.ready)\r\n                return;\r\n            this.fast();\r\n            this.buttonClick('fast');\r\n        };\r\n        this.tools.event.control.forward.click = () => {\r\n            if (this.status == player_state_enum_1.PlayerState.ready)\r\n                return;\r\n            debugger;\r\n            this.frame();\r\n            this.buttonClick('forward');\r\n        };\r\n        this.tools.event.control.position.mousedown = () => {\r\n            if (this.status == player_state_enum_1.PlayerState.ready)\r\n                return;\r\n            this.pause();\r\n            if (this.tools) {\r\n                this.tools.control.isMoudseDown = true;\r\n            }\r\n        };\r\n        this.tools.event.control.position.mouseup = () => {\r\n            if (this.status == player_state_enum_1.PlayerState.ready)\r\n                return;\r\n            if (!this.tools)\r\n                return;\r\n            this.tools.control.isMoudseDown = false;\r\n            let ctr = this.tools.control.position;\r\n            var value = parseFloat(ctr.value) - parseFloat(ctr.min);\r\n            this.seek(value);\r\n            this.resume();\r\n        };\r\n        this.tools.event.control.position.mousemove = (evt) => {\r\n            if (this.status == player_state_enum_1.PlayerState.ready)\r\n                return;\r\n            if (!this.tools)\r\n                return;\r\n            if (!evt)\r\n                return;\r\n            var width = evt.target.offsetWidth;\r\n            var x = evt.offsetX;\r\n            var p = x / width;\r\n            var c = parseFloat(this.tools.control.position.max) -\r\n                parseFloat(this.tools.control.position.min);\r\n            var current = c * p;\r\n            if (current < 0)\r\n                current = 0;\r\n            var date = new Date(current);\r\n            date.setUTCHours(date.getUTCHours() - 8);\r\n            this.title = date.format('HH:mm:ss');\r\n            if (this.tools.control.isMoudseDown)\r\n                this.tools.control.begin_time.innerText = date.format('HH:mm:ss');\r\n        };\r\n        this.tools.event.control.jump.back.click = () => {\r\n            if (this.status == player_state_enum_1.PlayerState.ready)\r\n                return;\r\n            if (!this.tools)\r\n                return;\r\n            if (this.playback_time.current) {\r\n                var date = new Date(this.playback_time.current.getTime());\r\n                date.setSeconds(date.getSeconds() - 30);\r\n                var value = date.getTime() - parseFloat(this.tools.control.position.min);\r\n                if (value <= 0)\r\n                    value = 0;\r\n                this.seek(value);\r\n            }\r\n            this.buttonClick('jump_back');\r\n        };\r\n        this.tools.event.control.jump.forward.click = () => {\r\n            if (this.status == player_state_enum_1.PlayerState.ready)\r\n                return;\r\n            if (!this.tools)\r\n                return;\r\n            if (this.playback_time.current) {\r\n                var date = new Date(this.playback_time.current.getTime());\r\n                date.setSeconds(date.getSeconds() + 30);\r\n                var value = date.getTime() - parseFloat(this.tools.control.position.min);\r\n                if (value >= parseFloat(this.tools.control.position.max))\r\n                    return;\r\n                this.seek(value);\r\n            }\r\n            this.buttonClick('jump_forward');\r\n        };\r\n        this.tools.event.control.volume.icon.click = () => {\r\n            if (this.status == player_state_enum_1.PlayerState.ready)\r\n                return;\r\n            if (this.soundOpened) {\r\n                this.closeSound();\r\n            }\r\n            else {\r\n                this.openSound();\r\n            }\r\n            //this.tools.control.volume.value = this.value;\r\n            this.buttonClick('volume');\r\n        };\r\n        this.tools.event.control.volume.slide.input = (e) => {\r\n            if (this.status == player_state_enum_1.PlayerState.ready)\r\n                return;\r\n            var value = parseInt(e.value);\r\n            if (value > 0) {\r\n                this.openSound();\r\n            }\r\n            else {\r\n                this.closeSound();\r\n            }\r\n            this.setVolume(value);\r\n            if (this.tools) {\r\n                this.tools.control.volume.value = value;\r\n            }\r\n        };\r\n        this.tools.event.control.rule.click = (e) => {\r\n            this.buttonClick('rule');\r\n            if (this.onRuleStateChanged) {\r\n                if (this.tools) {\r\n                    this.onRuleStateChanged(this.tools.event.control.rule.opened);\r\n                }\r\n            }\r\n        };\r\n        this.tools.event.control.subtitle.click = (e) => {\r\n            this.buttonClick('subtitle');\r\n            this.subtitle.set('');\r\n            if (this.tools) {\r\n                this.subtitle.enabled = this.tools.event.control.subtitle.opened;\r\n            }\r\n            if (this.onSubtitleEnableChanged) {\r\n                this.onSubtitleEnableChanged(this.subtitle.enabled);\r\n            }\r\n        };\r\n        var p = this.element.getElementsByClassName('parent-wnd')[0];\r\n        p.addEventListener('dblclick', () => {\r\n            console.log('dblclick');\r\n            try {\r\n                if (this.onViewerDoubleClicked) {\r\n                    this.onViewerDoubleClicked();\r\n                }\r\n            }\r\n            catch (ex) {\r\n                console.error(ex);\r\n            }\r\n            if (this.FullScreen) {\r\n                this.fullExit();\r\n            }\r\n            else {\r\n                this.fullScreen();\r\n            }\r\n        });\r\n        document.addEventListener('fullscreenchange', (e) => {\r\n            console.log('window fullscreenchange');\r\n            console.log(e);\r\n            this.plugin.JS_Resize(window.screen.width, window.screen.height);\r\n        });\r\n        document.addEventListener('webkitfullscreenchange', (e) => {\r\n            if (!window.screens) {\r\n                window.screens = {};\r\n            }\r\n            let target = e.target || (e.path ? e.path[0] : undefined);\r\n            if (target) {\r\n                if (!target.fullscreennumber)\r\n                    target.fullscreennumber = 1;\r\n                target.fullscreennumber++;\r\n                if (this.outsidefullscreen) {\r\n                    target.fullscreennumber++;\r\n                    this.outsidefullscreen = false;\r\n                }\r\n                var id = target.id;\r\n                window.screens[id] =\r\n                    target.fullscreennumber % 2 == 0 || document.fullscreen;\r\n                setTimeout(() => {\r\n                    if (window.screens[id]) {\r\n                        var scale = 1 / this.getRatio();\r\n                        console.log(window.screen.height);\r\n                        this.plugin.JS_Resize(window.screen.width * scale, window.screen.height * scale);\r\n                        if (this.tools) {\r\n                            this.tools.control.fullscreen.title = '退出';\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.FullScreen = false;\r\n                        this.plugin.JS_Resize(this.clientWidth, this.clientHeight);\r\n                        if (this.tools) {\r\n                            this.tools.control.fullscreen.title = '全屏';\r\n                        }\r\n                    }\r\n                    console.log('fullscreenchange id:' + id);\r\n                }, 200);\r\n            }\r\n        });\r\n        document.addEventListener('mozfullscreenchange', () => {\r\n            console.log('mozfullscreenchange');\r\n        });\r\n        document.addEventListener('MSFullscreenChange', () => {\r\n            console.log('MSFullscreenChange');\r\n        });\r\n        document.addEventListener('visibilitychange', () => {\r\n            try {\r\n                if (document.visibilityState == 'visible') {\r\n                    if (this.PlayMode == 'vod') {\r\n                        this.resume();\r\n                    }\r\n                    else {\r\n                        this.play();\r\n                    }\r\n                }\r\n                if (document.visibilityState == 'hidden') {\r\n                    if (this.PlayMode == 'vod') {\r\n                        this.pause();\r\n                    }\r\n                    else {\r\n                        try {\r\n                            this.stop(false);\r\n                        }\r\n                        catch (ex) {\r\n                            console.warn(ex);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            finally {\r\n                console.log(document.visibilityState + ':', this.status);\r\n            }\r\n        });\r\n    }\r\n    onPluginLoaded() {\r\n        this.initTools();\r\n        this.initSubtitle();\r\n        this.loaded = true;\r\n    }\r\n    check() {\r\n        setInterval(() => {\r\n            this.checkControl();\r\n            // this.checkFullscreen()\r\n        }, 10);\r\n    }\r\n    checkFullscreen() {\r\n        if (this.FullScreen) {\r\n            this.resize();\r\n        }\r\n        else {\r\n            this.resize(this.clientWidth, this.clientHeight);\r\n        }\r\n    }\r\n    checkControl() {\r\n        if (!this.tools || !this.tools.control.play)\r\n            return;\r\n        switch (this.status) {\r\n            case player_state_enum_1.PlayerState.pause:\r\n            case player_state_enum_1.PlayerState.slow:\r\n            case player_state_enum_1.PlayerState.fast:\r\n            case player_state_enum_1.PlayerState.end:\r\n            case player_state_enum_1.PlayerState.frame:\r\n                this.tools.control.play.className = 'play glyphicon glyphicon-play';\r\n                this.tools.control.play.title = '播放';\r\n                break;\r\n            case player_state_enum_1.PlayerState.playing:\r\n                if (this.PlayMode == play_mode_enum_1.PlayMode.vod) {\r\n                    this.tools.control.play.className = 'play glyphicon glyphicon-pause';\r\n                    this.tools.control.play.title = '暂停';\r\n                }\r\n                else {\r\n                    this.tools.control.play.className = 'play glyphicon glyphicon-stop';\r\n                    this.tools.control.play.title = '停止';\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    getStatus() {\r\n        return this.plugin.JS_GetWndStatus();\r\n    }\r\n    clearMediaPrivateData() {\r\n        try {\r\n            if (this.element) {\r\n                let canvas = this.element.querySelector('.draw-window');\r\n                if (canvas) {\r\n                    let ctx = canvas.getContext('2d');\r\n                    let width = canvas.offsetWidth;\r\n                    let height = canvas.offsetHeight;\r\n                    ctx.clearRect(0, 0, width, height);\r\n                }\r\n            }\r\n        }\r\n        catch (ex) {\r\n            console.error(ex);\r\n        }\r\n    }\r\n    loadPrivateTargetList(dataview, offset) {\r\n        this.clearMediaPrivateData();\r\n        let list = private_target_list_model_1.PrivateTargetList.load(dataview, offset);\r\n        if (this.element) {\r\n            let canvas = this.element.querySelector('.draw-window');\r\n            let ctx = canvas.getContext('2d');\r\n            let width = canvas.offsetWidth;\r\n            let height = canvas.offsetHeight;\r\n            ctx.beginPath();\r\n            for (let i = 0; i < list.Target.length; i++) {\r\n                const target = list.Target[i];\r\n                let countX = 0.0;\r\n                let countY = 0.0;\r\n                target.Point.forEach((x) => {\r\n                    countX += x.X;\r\n                    countY += x.Y;\r\n                });\r\n                let centerX = countX / target.Point.length;\r\n                let centerY = countY / target.Point.length;\r\n                for (let j = 0; j < target.Point.length; j++) {\r\n                    const point = target.Point[j];\r\n                    let x = point.X * width;\r\n                    let y = point.Y * height;\r\n                    let v = Math.abs(centerX - point.X) * 200;\r\n                    let h = Math.abs(centerY - point.Y) * 200;\r\n                    let a = (v + h) / 2;\r\n                    ctx.moveTo(x, y);\r\n                    if (point.X <= centerX) {\r\n                        ctx.lineTo(x + a, y);\r\n                    }\r\n                    else {\r\n                        ctx.lineTo(x - a, y);\r\n                    }\r\n                    ctx.moveTo(x, y);\r\n                    if (point.Y <= centerY) {\r\n                        ctx.lineTo(x, y + a);\r\n                    }\r\n                    else {\r\n                        ctx.lineTo(x, y - a);\r\n                    }\r\n                }\r\n            }\r\n            ctx.lineWidth = 2;\r\n            ctx.lineJoin = 'round';\r\n            ctx.lineCap = 'round';\r\n            ctx.strokeStyle = 'red';\r\n            ctx.shadowBlur = 3;\r\n            ctx.shadowColor = 'black';\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    loadPrivateRuleList(dataview, offset) {\r\n        this.clearMediaPrivateData();\r\n        let list = private_rule_list_model_1.PrivateRuleList.load(dataview, offset);\r\n        if (this.element) {\r\n            let canvas = this.element.querySelector('.draw-window');\r\n            let ctx = canvas.getContext('2d');\r\n            let width = canvas.offsetWidth;\r\n            let height = canvas.offsetHeight;\r\n            for (let i = 0; i < list.Rule.length; i++) {\r\n                const rule = list.Rule[i];\r\n                ctx.beginPath();\r\n                for (let j = 0; j < rule.Point.length; j++) {\r\n                    const point = rule.Point[j];\r\n                    if (j == 0) {\r\n                        ctx.moveTo(rule.Point[j].X * width, rule.Point[j].Y * height);\r\n                    }\r\n                    else {\r\n                        ctx.lineTo(rule.Point[j].X * width, rule.Point[j].Y * height);\r\n                    }\r\n                }\r\n                ctx.lineTo(rule.Point[0].X * width, rule.Point[0].Y * height);\r\n            }\r\n            ctx.lineCap = 'round';\r\n            ctx.lineJoin = 'round';\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeStyle = 'red';\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    doing(fn, args) {\r\n        (0, wait_1.wait)(() => {\r\n            return this.plugin && this.loaded;\r\n        }, () => {\r\n            fn(args);\r\n        });\r\n        // setTimeout(() => {\r\n        //   if (!this.plugin || this.loaded === false) {\r\n        //     this.doing(fn, args)\r\n        //     return\r\n        //   }\r\n        //   fn(args)\r\n        // }, this.timeout)\r\n    }\r\n    // 播放\r\n    play() {\r\n        console.log('status:', this.status);\r\n        this.status = player_state_enum_1.PlayerState.opening;\r\n        this.clearMediaPrivateData();\r\n        if (this.element) {\r\n            this.element.className += ' loading';\r\n        }\r\n        let m_begin = this.url.match(/(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})/);\r\n        let begin, end;\r\n        if (m_begin) {\r\n            let i_begin = m_begin.splice(0).map((x) => parseInt(x));\r\n            begin = new Date(i_begin[1], i_begin[2] - 1, i_begin[3], i_begin[4], i_begin[5], i_begin[6]);\r\n            begin.setUTCHours(begin.getUTCHours() + 8);\r\n            this.playback_time.begin = begin;\r\n            this.args.mode = play_mode_enum_1.PlayMode.vod;\r\n        }\r\n        var m_end = this.url.match(/_(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})/);\r\n        if (m_end) {\r\n            let i_end = m_end.splice(0).map((x) => parseInt(x));\r\n            end = new Date(i_end[1], i_end[2] - 1, i_end[3], i_end[4], i_end[5], i_end[6]);\r\n            end.setUTCHours(end.getUTCHours() + 8);\r\n            this.playback_time.end = end;\r\n        }\r\n        if (!m_begin && !m_end)\r\n            this.args.mode = play_mode_enum_1.PlayMode.live;\r\n        this.doing((args) => {\r\n            var t = this.element.getElementsByClassName('tools');\r\n            if (!t || !t[0]) {\r\n                this.initTools();\r\n            }\r\n            let tools = this.element.querySelector('.tools');\r\n            tools.style.display = 'none';\r\n            this.plugin\r\n                .JS_Play(this.url, {\r\n                isPlayback: this.PlayMode === play_mode_enum_1.PlayMode.vod,\r\n                onDebug: (debug) => {\r\n                    console.log(debug);\r\n                },\r\n                onPlaying: () => {\r\n                    this.element.classList.remove('loading');\r\n                    switch (this.status) {\r\n                        case player_state_enum_1.PlayerState.pause:\r\n                        case player_state_enum_1.PlayerState.frame:\r\n                            break;\r\n                        default:\r\n                            this.status = player_state_enum_1.PlayerState.playing;\r\n                            break;\r\n                    }\r\n                    tools.style.display = '';\r\n                    if (this.onPlaying) {\r\n                        this.onPlaying();\r\n                    }\r\n                },\r\n                getPosition: (p) => {\r\n                    if (p.data) {\r\n                        var u8array = new Uint8Array(p.data);\r\n                        // 2020-02-22T10:11:22Z\r\n                        // 01234567890123456789\r\n                        var year = parseInt(this.Uint8ArrayToString(u8array.slice(0, 4)));\r\n                        var month = parseInt(this.Uint8ArrayToString(u8array.slice(5, 7)));\r\n                        var day = parseInt(this.Uint8ArrayToString(u8array.slice(8, 10)));\r\n                        var hour = parseInt(this.Uint8ArrayToString(u8array.slice(11, 13)));\r\n                        var minute = parseInt(this.Uint8ArrayToString(u8array.slice(14, 16)));\r\n                        var second = parseInt(this.Uint8ArrayToString(u8array.slice(17, 19)));\r\n                        this.playback_time.current = new Date(year, month - 1, day, hour, minute, second);\r\n                        if (Number.isNaN(this.playback_time.current.getTime())) {\r\n                            return;\r\n                        }\r\n                        this.playback_time.current.setUTCHours(this.playback_time.current.getUTCHours() + 8);\r\n                        if (!this.tools)\r\n                            return;\r\n                        this.tools.control.position.value = this.playback_time.current\r\n                            .getTime()\r\n                            .toString();\r\n                        var current = new Date(parseFloat(this.tools.control.position.value) -\r\n                            parseFloat(this.tools.control.position.min));\r\n                        current.setUTCHours(current.getUTCHours() - 8);\r\n                        this.tools.control.begin_time.innerText =\r\n                            current.format('HH:mm:ss');\r\n                        // this.tools.control.position.title = current.format(\"HH:mm:ss\");\r\n                        var val = (this.playback_time.current.getTime() -\r\n                            parseFloat(this.tools.control.position.min)) /\r\n                            (parseFloat(this.tools.control.position.max) -\r\n                                parseFloat(this.tools.control.position.min));\r\n                        if (this.tools.control.position.max &&\r\n                            this.tools.control.position.min &&\r\n                            val >= 1) {\r\n                            this.stop();\r\n                        }\r\n                        var valStr = val * 100 + '% 100%';\r\n                        this.tools.control.position.style.backgroundSize = valStr;\r\n                        Promise.resolve().then(() => {\r\n                            if (this.getPosition) {\r\n                                this.getPosition(val);\r\n                            }\r\n                        });\r\n                        Promise.resolve().then(() => {\r\n                            if (this.getTimer &&\r\n                                this.tools &&\r\n                                this.playback_time.current) {\r\n                                let time = {\r\n                                    current: this.playback_time.current.getTime(),\r\n                                    min: parseFloat(this.tools.control.position.min),\r\n                                    max: parseFloat(this.tools.control.position.max),\r\n                                };\r\n                                this.getTimer(time);\r\n                            }\r\n                        });\r\n                        //this.status = p.offset + 1 >= p.count ? this.status = PlayerState.end : this.status = PlayerState.playing;\r\n                    }\r\n                },\r\n                readMediaPrivateData: (data) => {\r\n                    let draw_target = false;\r\n                    try {\r\n                        if (this.tools &&\r\n                            this.tools.event.control.rule.opened === false) {\r\n                            return draw_target;\r\n                        }\r\n                        var dataview = new DataView(data);\r\n                        // 开始标记，默认是：0x5052495648570001\r\n                        let programStreamPacket = [0x00, 0x00, 0x01, 0xba];\r\n                        let pesPacket = [0x00, 0x00, 0x01, 0xbf];\r\n                        let flags = [0x50, 0x52, 0x49, 0x56, 0x48, 0x57, 0x00, 0x01];\r\n                        let offset = 0;\r\n                        for (let i = 0; i < programStreamPacket.length; i++) {\r\n                            var item = dataview.getUint8(offset++);\r\n                            let packet = programStreamPacket[i];\r\n                            if (packet != item) {\r\n                                return draw_target;\r\n                            }\r\n                        }\r\n                        offset += 10;\r\n                        for (let i = 0; i < pesPacket.length; i++) {\r\n                            var item = dataview.getUint8(offset++);\r\n                            let packet = pesPacket[i];\r\n                            if (packet != item) {\r\n                                return draw_target;\r\n                            }\r\n                        }\r\n                        offset += 2;\r\n                        for (let i = offset; i < flags.length; i++) {\r\n                            var item = dataview.getUint8(offset + flags.length - i);\r\n                            if (flags[i] != item) {\r\n                                console.log(i, flags[i], item);\r\n                                return draw_target;\r\n                            }\r\n                        }\r\n                        offset += flags.length;\r\n                        let type = dataview.getInt32(offset, true);\r\n                        offset += 4;\r\n                        switch (type) {\r\n                            case 1:\r\n                                ;\r\n                                ((dataview, offset) => {\r\n                                    setTimeout(() => {\r\n                                        this.loadPrivateTargetList(dataview, offset);\r\n                                    }, 0);\r\n                                })(dataview, offset);\r\n                                draw_target = true;\r\n                                break;\r\n                            case 2:\r\n                                // loadPrivateRuleList(dataview, offset);\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }\r\n                    finally {\r\n                        if (draw_target) {\r\n                            if (this.clearMediaPrivateDataHandle) {\r\n                                clearTimeout(this.clearMediaPrivateDataHandle);\r\n                                this.clearMediaPrivateDataHandle = undefined;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (!this.clearMediaPrivateDataHandle) {\r\n                                this.clearMediaPrivateDataHandle = setTimeout(() => {\r\n                                    this.clearMediaPrivateData();\r\n                                    this.clearMediaPrivateDataHandle = undefined;\r\n                                }, 500);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n            })\r\n                .then(() => {\r\n                Promise.resolve().then(() => {\r\n                    if (this.onPlaying) {\r\n                        try {\r\n                            this.onPlaying();\r\n                        }\r\n                        catch (ex) {\r\n                            console.error(ex);\r\n                        }\r\n                    }\r\n                });\r\n                if (this.soundOpened) {\r\n                    var openSound = () => {\r\n                        setTimeout(() => {\r\n                            if (this.status == player_state_enum_1.PlayerState.playing) {\r\n                                setTimeout(() => {\r\n                                    this.plugin.JS_OpenSound();\r\n                                    console.warn('sound');\r\n                                }, 500 * 3);\r\n                            }\r\n                            else {\r\n                                openSound();\r\n                            }\r\n                        }, 100);\r\n                    };\r\n                    openSound();\r\n                }\r\n            });\r\n            if (!this.tools)\r\n                return;\r\n            if (this.tools.control.begin_time && this.playback_time.begin) {\r\n                this.tools.control.begin_time.innerText = '00:00:00';\r\n            }\r\n            if (this.tools &&\r\n                this.tools.control.end_time &&\r\n                this.playback_time.end &&\r\n                this.playback_time.begin) {\r\n                var date = new Date(this.playback_time.end.getTime() -\r\n                    this.playback_time.begin.getTime());\r\n                date.setUTCHours(date.getUTCHours() - 8);\r\n                this.tools.control.end_time.innerText = date.format('HH:mm:ss');\r\n            }\r\n            if (this.tools.control.position) {\r\n                if (this.playback_time.begin)\r\n                    this.tools.control.position.min = this.playback_time.begin\r\n                        .getTime()\r\n                        .toString();\r\n                if (this.playback_time.end)\r\n                    this.tools.control.position.max = this.playback_time.end\r\n                        .getTime()\r\n                        .toString();\r\n                console.log('interval:', parseFloat(this.tools.control.position.max) -\r\n                    parseFloat(this.tools.control.position.min));\r\n            }\r\n        }, {\r\n            begin: this.playback_time.begin\r\n                ? this.playback_time.begin.toISOString()\r\n                : undefined,\r\n            end: this.playback_time.end\r\n                ? this.playback_time.end.toISOString()\r\n                : undefined,\r\n        });\r\n    }\r\n    Uint8ArrayToString(data) {\r\n        var dataString = '';\r\n        for (var i = 0; i < data.length; i++) {\r\n            dataString += String.fromCharCode(data[i]);\r\n        }\r\n        return dataString;\r\n    }\r\n    seek(value) {\r\n        this.doing(() => {\r\n            console.log('seek:' + value);\r\n            this.plugin.JS_Seek(value / 1000, {\r\n                pause: () => {\r\n                    if (!this.element.classList.contains('loading')) {\r\n                        this.element.classList.add('loading');\r\n                    }\r\n                },\r\n                resume: () => {\r\n                    if (this.element.classList.contains('loading')) {\r\n                        this.element.classList.remove('loading');\r\n                    }\r\n                },\r\n            });\r\n        });\r\n    }\r\n    // 快进\r\n    fast() {\r\n        var status = this.getStatus();\r\n        console.log(status);\r\n        if (typeof status === 'number')\r\n            return;\r\n        if (status.iRate >= 4)\r\n            return;\r\n        this.doing(() => {\r\n            this.plugin.JS_Fast();\r\n        });\r\n        if (status.iRate > 1)\r\n            this.status = player_state_enum_1.PlayerState.fast;\r\n    }\r\n    // 慢放\r\n    slow() {\r\n        var status = this.getStatus();\r\n        console.log(status);\r\n        if (typeof status === 'number')\r\n            return;\r\n        if (status.iRate <= -4)\r\n            return;\r\n        this.doing(() => {\r\n            this.plugin.JS_Slow();\r\n        });\r\n        if (status.iRate < 1)\r\n            this.status = player_state_enum_1.PlayerState.slow;\r\n    }\r\n    // 截图\r\n    capturePicture() {\r\n        //\"ws://192.168.21.241:8800/ws/video/howellps/vod/dev_id/slot/stream/begin_end/vod.mp4?user=howell&password=123456\";\r\n        this.doing(() => {\r\n            var name = 'picture';\r\n            var name = this.name;\r\n            if (!name && this.url) {\r\n                name = this.url;\r\n                var begin = name.indexOf(this.args.mode) + this.args.mode.length + 1;\r\n                var end = name.lastIndexOf(this.args.mode) - 1;\r\n                name = name.substr(begin, end - begin);\r\n                name = name.replace(/\\//g, '_');\r\n            }\r\n            var date = new Date();\r\n            if (this.playback_time.current) {\r\n                date = this.playback_time.current;\r\n            }\r\n            var v;\r\n            name += '_' + date.getFullYear();\r\n            name += '_' + ((v = date.getMonth() + 1) < 10 ? '0' + v : v);\r\n            name += '_' + ((v = date.getDate()) < 10 ? '0' + v : v);\r\n            name += '_' + ((v = date.getHours()) < 10 ? '0' + v : v);\r\n            name += '_' + ((v = date.getMinutes()) < 10 ? '0' + v : v);\r\n            name += '_' + ((v = date.getSeconds()) < 10 ? '0' + v : v);\r\n            this.plugin.JS_CapturePicture(name, 'JPEG');\r\n        });\r\n    }\r\n    buttonClick(btn) {\r\n        Promise.resolve().then(() => {\r\n            try {\r\n                if (this.onButtonClicked) {\r\n                    this.onButtonClicked(btn);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                console.error(ex);\r\n            }\r\n        });\r\n    }\r\n    // 暂停\r\n    pause() {\r\n        this.doing(() => {\r\n            this.plugin.JS_Pause();\r\n        });\r\n        this.status = player_state_enum_1.PlayerState.pause;\r\n        this.clearMediaPrivateData();\r\n    }\r\n    speedResume() {\r\n        this.doing(() => {\r\n            var status = this.getStatus();\r\n            if (typeof status === 'number')\r\n                return;\r\n            if (status.iRate > 1) {\r\n                this.slow();\r\n                setTimeout(() => {\r\n                    this.speedResume();\r\n                }, 10);\r\n            }\r\n            else if (status.iRate < 1) {\r\n                this.fast();\r\n                setTimeout(() => {\r\n                    this.speedResume();\r\n                }, 10);\r\n            }\r\n            else {\r\n                this.status = player_state_enum_1.PlayerState.playing;\r\n            }\r\n        });\r\n    }\r\n    // 恢复\r\n    resume() {\r\n        this.element.className += ' loading';\r\n        this.doing(() => {\r\n            this.plugin.JS_Resume();\r\n        });\r\n        this.status = player_state_enum_1.PlayerState.playing;\r\n    }\r\n    // 单帧\r\n    frame() {\r\n        this.doing(() => {\r\n            this.plugin.JS_FrameForward();\r\n        });\r\n        this.status = player_state_enum_1.PlayerState.frame;\r\n    }\r\n    // 停止\r\n    stop(message = true) {\r\n        if (this.waitStopHandle)\r\n            throw new Error('waiting for stop');\r\n        if (this.element) {\r\n            this.element.classList.remove('loading');\r\n        }\r\n        if (this.FullScreen) {\r\n            this.fullExit();\r\n        }\r\n        this.clearMediaPrivateData();\r\n        this.soundOpened = false;\r\n        if (!this.plugin)\r\n            return;\r\n        switch (this.status) {\r\n            case player_state_enum_1.PlayerState.closing:\r\n            case player_state_enum_1.PlayerState.closed:\r\n                return;\r\n            default:\r\n                break;\r\n        }\r\n        console.log('stop');\r\n        try {\r\n            return this.plugin\r\n                .JS_Stop()\r\n                .then(() => {\r\n                this.status = player_state_enum_1.PlayerState.closed;\r\n                var tools = this.element.getElementsByClassName('tools');\r\n                if (tools && tools[0]) {\r\n                    this.element.removeChild(tools[0]);\r\n                    this.tools = undefined;\r\n                }\r\n            })\r\n                .catch((ex) => {\r\n                this.status = player_state_enum_1.PlayerState.closed;\r\n                var tools = this.element.getElementsByClassName('tools');\r\n                if (tools && tools[0]) {\r\n                    this.element.removeChild(tools[0]);\r\n                    this.tools = undefined;\r\n                }\r\n            })\r\n                .finally(() => {\r\n                {\r\n                    this.waitStopHandle = setTimeout(() => {\r\n                        this.waitStopHandle = undefined;\r\n                    }, 1500);\r\n                }\r\n            });\r\n        }\r\n        finally {\r\n            if (message) {\r\n                Promise.resolve().then(() => {\r\n                    if (this.onStoping)\r\n                        this.onStoping();\r\n                });\r\n            }\r\n        }\r\n    }\r\n    // 全屏\r\n    fullScreen() {\r\n        this.doing(() => {\r\n            try {\r\n                this.plugin.JS_FullScreenSingle();\r\n            }\r\n            catch (ex) {\r\n                console.error(ex);\r\n            }\r\n            //plugin.JS_FullScreen(0);\r\n            // plugin.JS_Resize(window.screen.width, window.screen.height);\r\n            this.resize(window.screen.width, window.screen.height);\r\n            this.FullScreen = true;\r\n        });\r\n    }\r\n    resize(width, height) {\r\n        if (!width)\r\n            width = this.clientWidth;\r\n        if (!height)\r\n            height = this.clientHeight;\r\n        this.doing((args) => {\r\n            var scale = 1 / this.getRatio();\r\n            this.plugin.JS_Resize(args.width * scale, args.height * scale);\r\n        }, {\r\n            width: width,\r\n            height: height,\r\n        });\r\n    }\r\n    _resize() {\r\n        var handle = setInterval(() => {\r\n            var scale = 1 / this.getRatio();\r\n            if (this.FullScreen && !document.fullscreen) {\r\n                this.FullScreen = false;\r\n                this.plugin.JS_Resize(this.clientWidth, this.clientHeight);\r\n                clearInterval(handle);\r\n                if (this.tools) {\r\n                    this.tools.control.fullscreen.title = '全屏';\r\n                }\r\n            }\r\n            else if (this.FullScreen == false) {\r\n                this.FullScreen = true;\r\n                this.plugin.JS_Resize(window.screen.width * scale, window.screen.height * scale);\r\n                if (this.tools) {\r\n                    this.tools.control.fullscreen.title = '退出';\r\n                }\r\n            }\r\n            else {\r\n            }\r\n        }, 200);\r\n    }\r\n    fullExit() {\r\n        var element = document.documentElement; //若要全屏页面中div，var element= document.getElementById(\"divID\");\r\n        //IE ActiveXObject\r\n        if (window.ActiveXObject) {\r\n            var WsShell = new ActiveXObject('WScript.Shell');\r\n            WsShell.SendKeys('{ESC}');\r\n        }\r\n        //HTML5 W3C 提议\r\n        else if (element.requestFullScreen) {\r\n            document.exitFullscreen();\r\n        }\r\n        //IE 11\r\n        else if (element.msRequestFullscreen) {\r\n            document.msExitFullscreen();\r\n        }\r\n        // Webkit (works in Safari5.1 and Chrome 15)\r\n        else if (element.webkitRequestFullScreen) {\r\n            document.webkitCancelFullScreen();\r\n        }\r\n        // Firefox (works in nightly)\r\n        else if (element.mozRequestFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        }\r\n        this.resize(this.clientWidth, this.clientHeight);\r\n    }\r\n    getRatio() {\r\n        var ratio = 0;\r\n        var screen = window.screen;\r\n        var ua = navigator.userAgent.toLowerCase();\r\n        if (window.devicePixelRatio !== undefined) {\r\n            ratio = window.devicePixelRatio;\r\n        }\r\n        else if (~ua.indexOf('msie')) {\r\n            if (screen.deviceXDPI && screen.logicalXDPI) {\r\n                ratio = screen.deviceXDPI / screen.logicalXDPI;\r\n            }\r\n        }\r\n        else if (window.outerWidth !== undefined &&\r\n            window.innerWidth !== undefined) {\r\n            ratio = window.outerWidth / window.innerWidth;\r\n        }\r\n        else {\r\n        }\r\n        return ratio;\r\n    }\r\n    download(filename, type) {\r\n        if (this.args.mode == play_mode_enum_1.PlayMode.vod)\r\n            this.doing((args) => {\r\n                this.plugin.JS_Download(args.filename, args.type);\r\n            }, { filename: filename, type: type });\r\n    }\r\n    openSound() {\r\n        this.doing(() => {\r\n            if (this.soundOpened)\r\n                return;\r\n            this.plugin.JS_OpenSound();\r\n            this.soundOpened = true;\r\n        });\r\n    }\r\n    getVolume() {\r\n        return new Promise((resolve) => {\r\n            let result = 0;\r\n            this.doing(() => {\r\n                this.plugin.JS_GetVolume(result);\r\n                resolve(result);\r\n            });\r\n        });\r\n    }\r\n    setVolume(value) {\r\n        this.doing((value) => {\r\n            this.plugin.JS_SetVolume(value);\r\n            this.volume = value;\r\n        }, value);\r\n    }\r\n    changeRuleState(value) {\r\n        if (this.tools && this.tools.control.rule) {\r\n            if (this.tools.event.control.rule.opened != value) {\r\n                this.tools.control.rule.click();\r\n            }\r\n        }\r\n    }\r\n    subtitleEnabled(value) {\r\n        if (this.tools && this.tools.control.subtitle) {\r\n            if (this.tools.event.control.subtitle.opened != value) {\r\n                this.tools.control.subtitle.click();\r\n            }\r\n        }\r\n    }\r\n    getOSDTime() {\r\n        return new Promise((resolve) => {\r\n            this.doing(() => {\r\n                this.plugin.JS_GetOSDTime().then((time) => {\r\n                    resolve(time);\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.WSPlayer = WSPlayer;\r\nwindow.WSPlayer = WSPlayer;\r\n"],"names":[],"sourceRoot":""}