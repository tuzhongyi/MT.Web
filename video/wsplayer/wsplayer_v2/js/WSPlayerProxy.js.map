{"version":3,"file":"WSPlayerProxy.js","mappings":";;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;;;;;;;;ACfpD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;;;;;;;;ACzC1D;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;;;;;;UC5CpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBa;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D,yBAAqB;AACrB,4BAA4B,mBAAO,CAAC,IAA0B;AAC9D,yBAAyB,mBAAO,CAAC,IAAkB;AACnD,wBAAwB,mBAAO,CAAC,GAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8CAA8C;AACzE;AACA;AACA,2BAA2B,8CAA8C;AACzE;AACA;AACA,2BAA2B,4DAA4D;AACvF;AACA;AACA,2BAA2B,8CAA8C;AACzE;AACA;AACA,2BAA2B,8CAA8C;AACzE;AACA;AACA,2BAA2B,yDAAyD;AACpF;AACA;AACA,2BAA2B,+CAA+C;AAC1E;AACA;AACA,2BAA2B,sDAAsD;AACjF;AACA;AACA,2BAA2B,gDAAgD;AAC3E;AACA;AACA,2BAA2B,+CAA+C;AAC1E;AACA;AACA,2BAA2B,oDAAoD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B,kDAAkD;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B,oDAAoD;AAC/E;AACA;AACA,2BAA2B,qDAAqD;AAChF;AACA;AACA,2BAA2B,oDAAoD;AAC/E;AACA;AACA,2BAA2B,kEAAkE;AAC7F;AACA;AACA,2BAA2B,wEAAwE;AACnG;AACA;AACA,2BAA2B,qEAAqE;AAChG;AACA;AACA,2BAA2B,sDAAsD;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yEAAyE;AACpG;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAqB;AACrB","sources":["webpack://@wsplayer/webpack_01/./enum/player-state.enum.ts","webpack://@wsplayer/webpack_01/./player-command.ts","webpack://@wsplayer/webpack_01/./tools/event-emitter.ts","webpack://@wsplayer/webpack_01/webpack/bootstrap","webpack://@wsplayer/webpack_01/./player-proxy.ts"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlayerState = void 0;\r\nvar PlayerState;\r\n(function (PlayerState) {\r\n    PlayerState[PlayerState[\"ready\"] = 0] = \"ready\";\r\n    PlayerState[PlayerState[\"playing\"] = 1] = \"playing\";\r\n    PlayerState[PlayerState[\"pause\"] = 2] = \"pause\";\r\n    PlayerState[PlayerState[\"slow\"] = 3] = \"slow\";\r\n    PlayerState[PlayerState[\"fast\"] = 4] = \"fast\";\r\n    PlayerState[PlayerState[\"end\"] = 5] = \"end\";\r\n    PlayerState[PlayerState[\"opening\"] = 6] = \"opening\";\r\n    PlayerState[PlayerState[\"closing\"] = 7] = \"closing\";\r\n    PlayerState[PlayerState[\"frame\"] = 8] = \"frame\";\r\n    PlayerState[PlayerState[\"closed\"] = 255] = \"closed\";\r\n})(PlayerState = exports.PlayerState || (exports.PlayerState = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlayerCommand = void 0;\r\nvar PlayerCommand;\r\n(function (PlayerCommand) {\r\n    PlayerCommand[\"stop\"] = \"stop\";\r\n    PlayerCommand[\"play\"] = \"play\";\r\n    PlayerCommand[\"seek\"] = \"seek\";\r\n    PlayerCommand[\"fast\"] = \"fast\";\r\n    PlayerCommand[\"slow\"] = \"slow\";\r\n    PlayerCommand[\"pause\"] = \"pause\";\r\n    PlayerCommand[\"resume\"] = \"resume\";\r\n    PlayerCommand[\"frame\"] = \"frame\";\r\n    PlayerCommand[\"resize\"] = \"resize\";\r\n    PlayerCommand[\"fullscreen\"] = \"fullScreen\";\r\n    PlayerCommand[\"fullexit\"] = \"fullExit\";\r\n    PlayerCommand[\"download\"] = \"download\";\r\n    PlayerCommand[\"speed_resume\"] = \"speedResume\";\r\n    PlayerCommand[\"capture_picture\"] = \"capturePicture\";\r\n    PlayerCommand[\"subtitle_text\"] = \"subtitleText\";\r\n    PlayerCommand[\"subtitle_enabled\"] = \"subtitleEnabled\";\r\n    PlayerCommand[\"open_sound\"] = \"openSound\";\r\n    PlayerCommand[\"close_sound\"] = \"closeSound\";\r\n    PlayerCommand[\"change_rule_state\"] = \"changeRuleState\";\r\n    PlayerCommand[\"button_click\"] = \"buttonClick\";\r\n    PlayerCommand[\"get_capture_picture_data\"] = \"getCapturePictureData\";\r\n    PlayerCommand[\"get_position\"] = \"getPosition\";\r\n    PlayerCommand[\"get_timer\"] = \"getTimer\";\r\n    PlayerCommand[\"get_volume\"] = \"getVolume\";\r\n    PlayerCommand[\"set_volume\"] = \"setVolume\";\r\n    PlayerCommand[\"on_stoping\"] = \"onStoping\";\r\n    PlayerCommand[\"on_playing\"] = \"onPlaying\";\r\n    PlayerCommand[\"on_button_clicked\"] = \"onButtonClicked\";\r\n    PlayerCommand[\"on_viewer_doubleclicked\"] = \"onViewerDoubleClicked\";\r\n    PlayerCommand[\"on_viewer_clicked\"] = \"onViewerClicked\";\r\n    PlayerCommand[\"on_status_changed\"] = \"onStatusChanged\";\r\n    PlayerCommand[\"on_capture_picture\"] = \"onCapturePicture\";\r\n    PlayerCommand[\"on_rule_state_changed\"] = \"onRuleStateChanged\";\r\n    PlayerCommand[\"on_subtitle_enabled_changed\"] = \"onSubtitleEnableChanged\";\r\n    PlayerCommand[\"get_osd_time\"] = \"getOsdTime\";\r\n    PlayerCommand[\"on_osd_time\"] = \"onOsdTime\";\r\n})(PlayerCommand = exports.PlayerCommand || (exports.PlayerCommand = {}));\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EventEmitter = void 0;\r\nclass EventEmitter {\r\n    constructor() {\r\n        this.eventMap = {};\r\n    }\r\n    get keys() {\r\n        let keys = [];\r\n        for (const key in this.eventMap) {\r\n            keys.push(key);\r\n        }\r\n        return keys;\r\n    }\r\n    // 添加对应事件的监听函数\r\n    on(eventName, listener) {\r\n        if (!this.eventMap[eventName]) {\r\n            this.eventMap[eventName] = [];\r\n        }\r\n        this.eventMap[eventName].push(listener);\r\n        return this;\r\n    }\r\n    // 触发事件\r\n    emit(eventName, ...args) {\r\n        const listeners = this.eventMap[eventName];\r\n        if (!listeners || listeners.length === 0)\r\n            return false;\r\n        listeners.forEach((listener) => {\r\n            listener(...args);\r\n        });\r\n        return true;\r\n    }\r\n    // 取消对应事件的监听\r\n    off(eventName, listener) {\r\n        const listeners = this.eventMap[eventName];\r\n        if (listeners && listeners.length > 0) {\r\n            const index = listeners.indexOf(listener);\r\n            if (index > -1) {\r\n                listeners.splice(index, 1);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexports.EventEmitter = EventEmitter;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WSPlayerProxy = void 0;\r\nconst player_state_enum_1 = require(\"./enum/player-state.enum\");\r\nconst player_command_1 = require(\"./player-command\");\r\nconst event_emitter_1 = require(\"./tools/event-emitter\");\r\nclass WSPlayerProxy {\r\n    constructor(iframeId) {\r\n        this.iframeId = iframeId;\r\n        this.event = new event_emitter_1.EventEmitter();\r\n        this.status = player_state_enum_1.PlayerState.ready;\r\n        this.messagehandle = this.registevent.bind(this);\r\n        window.addEventListener('message', this.messagehandle);\r\n    }\r\n    iframe() {\r\n        if (typeof this.iframeId === 'string') {\r\n            return document.getElementById(this.iframeId);\r\n        }\r\n        else {\r\n            return this.iframeId;\r\n        }\r\n    }\r\n    postMessage(data) {\r\n        let message = JSON.stringify(data);\r\n        let iframe = this.iframe();\r\n        if (iframe.contentWindow) {\r\n            iframe.contentWindow.postMessage(message, '*');\r\n        }\r\n    }\r\n    stop() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.stop });\r\n    }\r\n    play() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.play });\r\n    }\r\n    seek(value) {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.seek, value: value });\r\n    }\r\n    fast() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.fast });\r\n    }\r\n    slow() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.slow });\r\n    }\r\n    capturePicture() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.capture_picture });\r\n    }\r\n    pause() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.pause });\r\n    }\r\n    speedResume() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.speed_resume });\r\n    }\r\n    resume() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.resume });\r\n    }\r\n    frame() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.frame });\r\n    }\r\n    fullScreen() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.fullscreen });\r\n    }\r\n    resize(width, height) {\r\n        this.postMessage({\r\n            command: player_command_1.PlayerCommand.resize,\r\n            width: width,\r\n            height: height,\r\n        });\r\n    }\r\n    fullExit() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.fullexit });\r\n    }\r\n    download(filename, type) {\r\n        this.postMessage({\r\n            command: player_command_1.PlayerCommand.download,\r\n            filename: filename,\r\n            type: type,\r\n        });\r\n    }\r\n    openSound() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.open_sound });\r\n    }\r\n    closeSound() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.close_sound });\r\n    }\r\n    getVolume() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.get_volume });\r\n    }\r\n    setVolume(value) {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.set_volume, value: value });\r\n    }\r\n    subtitleEnabled(value) {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.subtitle_enabled, value: value });\r\n    }\r\n    setSubtitle(value) {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.subtitle_text, value: value });\r\n    }\r\n    getOSDTime() {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.get_osd_time });\r\n    }\r\n    destroy() {\r\n        window.removeEventListener('message', this.messagehandle);\r\n        // if (this.tools) {\r\n        //   this.tools.destroy()\r\n        // }\r\n    }\r\n    destory() {\r\n        this.destroy();\r\n    }\r\n    changeRuleState(value) {\r\n        this.postMessage({ command: player_command_1.PlayerCommand.change_rule_state, value: value });\r\n    }\r\n    registevent(e) {\r\n        if (e && e.data) {\r\n            let data = { command: '', index: '0' };\r\n            try {\r\n                if (typeof e.data === 'string') {\r\n                    data = JSON.parse(e.data);\r\n                }\r\n                else {\r\n                    data = e.data;\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.warn(error, e);\r\n            }\r\n            switch (data.command) {\r\n                case player_command_1.PlayerCommand.on_stoping:\r\n                    this.event.emit('onStoping', parseInt(data.index));\r\n                    if (this.onStoping) {\r\n                        this.onStoping(parseInt(data.index));\r\n                    }\r\n                    break;\r\n                case player_command_1.PlayerCommand.on_playing:\r\n                    this.event.emit('onPlaying', parseInt(data.index));\r\n                    if (this.onPlaying) {\r\n                        this.onPlaying(parseInt(data.index));\r\n                    }\r\n                    break;\r\n                case player_command_1.PlayerCommand.get_position:\r\n                    this.event.emit('getPosition', parseInt(data.index), parseFloat(data.value));\r\n                    if (this.getPosition) {\r\n                        this.getPosition(parseInt(data.index), parseFloat(data.value));\r\n                    }\r\n                    break;\r\n                case player_command_1.PlayerCommand.get_timer:\r\n                    this.event.emit('getTimer', parseInt(data.index), data.value);\r\n                    if (this.getTimer) {\r\n                        this.getTimer(parseInt(data.index), data.value);\r\n                    }\r\n                    break;\r\n                case player_command_1.PlayerCommand.on_button_clicked:\r\n                    this.event.emit('onButtonClicked', parseInt(data.index), data.value);\r\n                    if (this.onButtonClicked) {\r\n                        this.onButtonClicked(parseInt(data.index), data.value);\r\n                    }\r\n                    break;\r\n                case player_command_1.PlayerCommand.on_viewer_doubleclicked:\r\n                    this.event.emit('onViewerDoubleClicked', parseInt(data.index));\r\n                    if (this.onViewerDoubleClicked) {\r\n                        this.onViewerDoubleClicked(parseInt(data.index));\r\n                    }\r\n                    break;\r\n                case player_command_1.PlayerCommand.on_viewer_clicked:\r\n                    this.event.emit('onViewerClicked', parseInt(data.index));\r\n                    if (this.onViewerClicked) {\r\n                        this.onViewerClicked(parseInt(data.index));\r\n                    }\r\n                    break;\r\n                case player_command_1.PlayerCommand.on_rule_state_changed:\r\n                    this.event.emit('onRuleStateChanged', parseInt(data.index), data.value);\r\n                    if (this.onRuleStateChanged) {\r\n                        this.onRuleStateChanged(parseInt(data.index), data.value);\r\n                    }\r\n                case player_command_1.PlayerCommand.on_status_changed:\r\n                    this.event.emit('onStatusChanged', parseInt(data.index), parseInt(data.value));\r\n                    if (this.onStatusChanged) {\r\n                        this.onStatusChanged(parseInt(data.index), data.value);\r\n                    }\r\n                    break;\r\n                case player_command_1.PlayerCommand.on_subtitle_enabled_changed:\r\n                    this.event.emit('onSubtitleEnableChanged', parseInt(data.index), data.value);\r\n                    if (this.onSubtitleEnableChanged) {\r\n                        this.onSubtitleEnableChanged(parseInt(data.index), data.value);\r\n                    }\r\n                    break;\r\n                case player_command_1.PlayerCommand.on_osd_time:\r\n                    this.event.emit('onOsdTime', parseInt(data.index), parseInt(data.value));\r\n                    if (this.onOsdTime) {\r\n                        this.onOsdTime(parseInt(data.index), parseInt(data.value));\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.WSPlayerProxy = WSPlayerProxy;\r\nwindow.WSPlayerProxy = WSPlayerProxy;\r\n"],"names":[],"sourceRoot":""}