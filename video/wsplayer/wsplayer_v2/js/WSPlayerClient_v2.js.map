{"version":3,"file":"WSPlayerClient_v2.js","mappings":";;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;;;;;;;UCzCvE;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBa;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D,yBAAsB;AACtB,yBAAyB,mBAAO,CAAC,IAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uEAAuE;AACnG,aAAa;AACb;AACA,4BAA4B,uEAAuE;AACnG,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,mCAAmC;AACnC;AACA,4BAA4B,8EAA8E;AAC1G,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAsB;AACtB","sources":["webpack://@wsplayer/webpack_01/./player-command.ts","webpack://@wsplayer/webpack_01/webpack/bootstrap","webpack://@wsplayer/webpack_01/./player-client.ts"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlayerCommand = void 0;\r\nvar PlayerCommand;\r\n(function (PlayerCommand) {\r\n    PlayerCommand[\"stop\"] = \"stop\";\r\n    PlayerCommand[\"play\"] = \"play\";\r\n    PlayerCommand[\"seek\"] = \"seek\";\r\n    PlayerCommand[\"fast\"] = \"fast\";\r\n    PlayerCommand[\"slow\"] = \"slow\";\r\n    PlayerCommand[\"pause\"] = \"pause\";\r\n    PlayerCommand[\"resume\"] = \"resume\";\r\n    PlayerCommand[\"frame\"] = \"frame\";\r\n    PlayerCommand[\"resize\"] = \"resize\";\r\n    PlayerCommand[\"fullscreen\"] = \"fullScreen\";\r\n    PlayerCommand[\"fullexit\"] = \"fullExit\";\r\n    PlayerCommand[\"download\"] = \"download\";\r\n    PlayerCommand[\"speed_resume\"] = \"speedResume\";\r\n    PlayerCommand[\"capture_picture\"] = \"capturePicture\";\r\n    PlayerCommand[\"subtitle_text\"] = \"subtitleText\";\r\n    PlayerCommand[\"subtitle_enabled\"] = \"subtitleEnabled\";\r\n    PlayerCommand[\"open_sound\"] = \"openSound\";\r\n    PlayerCommand[\"close_sound\"] = \"closeSound\";\r\n    PlayerCommand[\"change_rule_state\"] = \"changeRuleState\";\r\n    PlayerCommand[\"button_click\"] = \"buttonClick\";\r\n    PlayerCommand[\"get_capture_picture_data\"] = \"getCapturePictureData\";\r\n    PlayerCommand[\"get_position\"] = \"getPosition\";\r\n    PlayerCommand[\"get_timer\"] = \"getTimer\";\r\n    PlayerCommand[\"get_volume\"] = \"getVolume\";\r\n    PlayerCommand[\"set_volume\"] = \"setVolume\";\r\n    PlayerCommand[\"on_stoping\"] = \"onStoping\";\r\n    PlayerCommand[\"on_playing\"] = \"onPlaying\";\r\n    PlayerCommand[\"on_button_clicked\"] = \"onButtonClicked\";\r\n    PlayerCommand[\"on_viewer_doubleclicked\"] = \"onViewerDoubleClicked\";\r\n    PlayerCommand[\"on_viewer_clicked\"] = \"onViewerClicked\";\r\n    PlayerCommand[\"on_status_changed\"] = \"onStatusChanged\";\r\n    PlayerCommand[\"on_capture_picture\"] = \"onCapturePicture\";\r\n    PlayerCommand[\"on_rule_state_changed\"] = \"onRuleStateChanged\";\r\n    PlayerCommand[\"on_subtitle_enabled_changed\"] = \"onSubtitleEnableChanged\";\r\n    PlayerCommand[\"get_osd_time\"] = \"getOsdTime\";\r\n    PlayerCommand[\"on_osd_time\"] = \"onOsdTime\";\r\n})(PlayerCommand = exports.PlayerCommand || (exports.PlayerCommand = {}));\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WSPlayerClient = void 0;\r\nconst player_command_1 = require(\"./player-command\");\r\nclass WSPlayerClient {\r\n    constructor(player, index = 0) {\r\n        this.player = player;\r\n        this.index = index;\r\n        this.video = {\r\n            stoping: () => {\r\n                this.send({ index: this.index, command: player_command_1.PlayerCommand.on_stoping });\r\n            },\r\n            playing: () => {\r\n                this.send({ index: this.index, command: player_command_1.PlayerCommand.on_playing });\r\n            },\r\n            position: (value) => {\r\n                this.send({\r\n                    index: this.index,\r\n                    command: player_command_1.PlayerCommand.get_position,\r\n                    value: value,\r\n                });\r\n            },\r\n            time: (value) => {\r\n                this.send({\r\n                    index: this.index,\r\n                    command: player_command_1.PlayerCommand.get_timer,\r\n                    value: value,\r\n                });\r\n            },\r\n            capturepicture: (data) => {\r\n                this.send({\r\n                    index: this.index,\r\n                    command: player_command_1.PlayerCommand.on_capture_picture,\r\n                    data: data,\r\n                });\r\n            },\r\n            state: (state) => {\r\n                this.send({\r\n                    index: this.index,\r\n                    command: player_command_1.PlayerCommand.on_status_changed,\r\n                    value: state,\r\n                });\r\n            },\r\n            rule: (enabled) => {\r\n                this.send({\r\n                    index: this.index,\r\n                    command: player_command_1.PlayerCommand.on_rule_state_changed,\r\n                    value: enabled,\r\n                });\r\n            },\r\n            subtitle: (enabled) => {\r\n                this.send({\r\n                    index: this.index,\r\n                    command: player_command_1.PlayerCommand.on_subtitle_enabled_changed,\r\n                    value: enabled,\r\n                });\r\n            },\r\n            osd: (value) => {\r\n                this.send({\r\n                    index: this.index,\r\n                    command: player_command_1.PlayerCommand.on_osd_time,\r\n                    value: value,\r\n                });\r\n            },\r\n        };\r\n        this.screen = {\r\n            change: (isfull) => { },\r\n            click: () => {\r\n                this.send({ index: this.index, command: player_command_1.PlayerCommand.on_viewer_clicked });\r\n            },\r\n            dblclick: () => {\r\n                this.send({\r\n                    index: this.index,\r\n                    command: player_command_1.PlayerCommand.on_viewer_doubleclicked,\r\n                });\r\n            },\r\n        };\r\n        this.button = {\r\n            click: (name) => {\r\n                this.send({\r\n                    index: this.index,\r\n                    command: player_command_1.PlayerCommand.on_button_clicked,\r\n                    value: name,\r\n                });\r\n            },\r\n        };\r\n        this.regist();\r\n    }\r\n    send(data) {\r\n        let message = JSON.stringify(data);\r\n        window.parent.postMessage(message, '*');\r\n    }\r\n    regist() {\r\n        window.addEventListener('message', (e) => {\r\n            if (e && e.data) {\r\n                try {\r\n                    let data = JSON.parse(e.data);\r\n                    switch (data.command) {\r\n                        case player_command_1.PlayerCommand.stop:\r\n                            this.player.stop();\r\n                            break;\r\n                        case player_command_1.PlayerCommand.play:\r\n                            this.player.play();\r\n                            break;\r\n                        case player_command_1.PlayerCommand.seek:\r\n                            this.player.seek(data.value);\r\n                            break;\r\n                        case player_command_1.PlayerCommand.fast:\r\n                            this.player.fast();\r\n                            break;\r\n                        case player_command_1.PlayerCommand.slow:\r\n                            this.player.slow();\r\n                            break;\r\n                        case player_command_1.PlayerCommand.capture_picture:\r\n                            this.player.capturePicture();\r\n                            break;\r\n                        case player_command_1.PlayerCommand.get_capture_picture_data:\r\n                            this.player.getCapturePictureData().then((x) => {\r\n                                this.video.capturepicture(x);\r\n                            });\r\n                            break;\r\n                        case player_command_1.PlayerCommand.pause:\r\n                            this.player.pause();\r\n                            break;\r\n                        case player_command_1.PlayerCommand.speed_resume:\r\n                            this.player.speedResume();\r\n                            break;\r\n                        case player_command_1.PlayerCommand.resume:\r\n                            this.player.resume();\r\n                            break;\r\n                        case player_command_1.PlayerCommand.frame:\r\n                            this.player.frame();\r\n                            break;\r\n                        case player_command_1.PlayerCommand.fullscreen:\r\n                            this.player.fullscreen();\r\n                            break;\r\n                        case player_command_1.PlayerCommand.resize:\r\n                            this.player.resize(data.width, data.height);\r\n                            break;\r\n                        case player_command_1.PlayerCommand.fullexit:\r\n                            this.player.fullexit();\r\n                            break;\r\n                        case player_command_1.PlayerCommand.download:\r\n                            this.player.download(data.filename, data.type);\r\n                            break;\r\n                        case player_command_1.PlayerCommand.open_sound:\r\n                            this.player.openSound();\r\n                            break;\r\n                        case player_command_1.PlayerCommand.close_sound:\r\n                            this.player.closeSound();\r\n                            break;\r\n                        case player_command_1.PlayerCommand.get_volume:\r\n                            // this.player.sound.volume.get().then((x) => {})\r\n                            break;\r\n                        case player_command_1.PlayerCommand.set_volume:\r\n                            this.player.setVolume(data.value);\r\n                            break;\r\n                        case player_command_1.PlayerCommand.change_rule_state:\r\n                            this.player.changeRuleState(data.value);\r\n                            break;\r\n                        case player_command_1.PlayerCommand.button_click:\r\n                            break;\r\n                        case player_command_1.PlayerCommand.subtitle_text:\r\n                            this.player.subtitleText(data.value);\r\n                            break;\r\n                        case player_command_1.PlayerCommand.subtitle_enabled:\r\n                            this.player.subtitleEnabled(data.value);\r\n                            break;\r\n                        case player_command_1.PlayerCommand.get_osd_time:\r\n                            this.player.getOSDTime().then((value) => {\r\n                                this.video.osd(value);\r\n                            });\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                catch (error) { }\r\n            }\r\n        });\r\n        this.registevent(this.player.event.video, this.video);\r\n        this.registevent(this.player.event.screen, this.screen);\r\n        this.registevent(this.player.event.button, this.button);\r\n    }\r\n    registevent(event, data) {\r\n        let _data = data;\r\n        for (const key in _data) {\r\n            let _key = key;\r\n            event.on(_key, _data[key].bind(this));\r\n        }\r\n    }\r\n}\r\nexports.WSPlayerClient = WSPlayerClient;\r\nwindow.WSPlayerClient = WSPlayerClient;\r\n"],"names":[],"sourceRoot":""}