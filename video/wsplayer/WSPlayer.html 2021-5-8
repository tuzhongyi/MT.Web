<html>

<head>

    <meta charset="UTF-8">
    <link href="css/bootstrap.min.css" rel="stylesheet" />

    <link type='text/css' href='./css/howell.font.css' rel="stylesheet" />
    <link type='text/css' href='./css/player.css' rel="stylesheet" />
    
    <style type="text/css">
        html,
        body {
            width: 100%;
            height: 100%;
            padding: 0;
            margin: 0;
            background-color:black;
        }

        input[type=text] {
            width: 100%;
        }


        .main {
            width:100%;
            height:100%;
            margin:0;
            padding:0;
            overflow: hidden;
        }

        .player {
        }
    </style>
</head>

<body>
    <div class="main">
        <div class="player" id="player">
            <div class="video" style="height: 100%; position: relative;">

            </div>
        </div>
    </div>



    <script src="./ext.js"></script>
    <script src="./jquery-1.7.1.min.js"></script>
    <script src="./base64.js"></script>
    <script src="./WSPlayer.js"></script>
    <script>

document.addEventListener('webkitfullscreenchange', function (e){
    setTimeout(function() {
        if(window.aPlayer)
        {
            window.aPlayer.resize(window.innerWidth, window.innerHeight);
        }    
    }, 250);
});


onresize =  function() {
    setTimeout(function() {
        if(window.aPlayer)
        {
            window.aPlayer.clinetWidth = window.innerWidth;
            window.aPlayer.clientHeight = window.innerHeight;
            window.aPlayer.resize(window.innerWidth, window.innerHeight);
        }    
    }, 10);
}

        window.aPlayer;
        function play(url, name) {          
            if (window.aPlayer) {
                if (window.aPlayer.status == 255) {
                   window.aPlayer.url = url;
                   window.aPlayer.name = name;
                   window.aPlayer.play();
                }
                else {
                   window.aPlayer.stop().then(function () {
                       window.aPlayer.url = url;
                       window.aPlayer.name = name
                       window.aPlayer.play();
                    });
                }
            }
            else {
               window.aPlayer = new WSPlayer({
                    elementId: "player"
                });               
               window.aPlayer.url = url;
               window.aPlayer.name = name
               window.aPlayer.play();
            }
        }

        function getQuerys(){
            var querys = {};
            var str = location.search.substr(1);    
            var query = str.split("&");
            for (let i = 0; i < query.length; i++) {
                let keyvalue = query[i].split('=');
                querys[keyvalue[0].toLocaleLowerCase()] = decodeURIComponent(keyvalue[1]);
            }
            return querys;
            
        }


function init(width, height) {
    if(!width || !height)
    {
        setTimeout(function(){
            init(window.innerWidth, window.innerHeight);
        }, 100);
        return;
    }
    var player_element = document.getElementById("player");            
            player_element.style.width = window.innerWidth + "px";
            player_element.style.height = window.innerHeight + "px";

            console.log({
                width:window.innerWidth,
                height:window.innerHeight
            })

            var querys = getQuerys();

            var url = base64decode(querys.url);
            console.log("url:", url);
            //preview();
            //playback();
            var name = ""
            if(querys.name){
                name = base64decode(querys.name);
                name = utf8to16(name);
             }
            console.log("name:",name);
               play(url, name);

               if(querys.tool_style){
                   createToolStyle(base64decode(querys.tool_style));
               }
}

function createToolStyle(inner){
    
    inner = inner.replace(/\"/g,"");
    let style =  document.createElement("style")
    style.innerHTML = ".player .tools"+inner;
    document.head.appendChild(style);
}




        onload = function () {
            init(window.innerWidth, window.innerHeight);
            
        }





    </script>


</body>

</html>